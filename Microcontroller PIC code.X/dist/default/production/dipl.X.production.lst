

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Aug 15 01:06:21 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000F                     	;# 
    54  0010                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008F                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  0110                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011A                     	;# 
   103  011B                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  018F                     	;# 
   108  0190                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020D                     	;# 
   130  0210                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0294                     	;# 
   144  0295                     	;# 
   145  0295                     	;# 
   146  0296                     	;# 
   147  0298                     	;# 
   148  0298                     	;# 
   149  0299                     	;# 
   150  029A                     	;# 
   151  029B                     	;# 
   152  029C                     	;# 
   153  029C                     	;# 
   154  029D                     	;# 
   155  029E                     	;# 
   156  029F                     	;# 
   157  0311                     	;# 
   158  0311                     	;# 
   159  0312                     	;# 
   160  0313                     	;# 
   161  0314                     	;# 
   162  0315                     	;# 
   163  0315                     	;# 
   164  0316                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  031C                     	;# 
   170  031C                     	;# 
   171  031D                     	;# 
   172  031E                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  041C                     	;# 
   180  041D                     	;# 
   181  041E                     	;# 
   182  0791                     	;# 
   183  0792                     	;# 
   184  0793                     	;# 
   185  0794                     	;# 
   186  0795                     	;# 
   187  0798                     	;# 
   188  0799                     	;# 
   189  079A                     	;# 
   190  07A0                     	;# 
   191  07A1                     	;# 
   192  07A2                     	;# 
   193  07A3                     	;# 
   194  07A4                     	;# 
   195  07A5                     	;# 
   196  07A6                     	;# 
   197  07A7                     	;# 
   198  07A8                     	;# 
   199  07A9                     	;# 
   200  07AA                     	;# 
   201  07AB                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  0580                     __pidataBANK0:	
   216                           
   217                           ;initializer for _cifre
   218  0580  3400               	retlw	0
   219  0581  3401               	retlw	1
   220  0582  3402               	retlw	2
   221  0583  3403               	retlw	3
   222  0584  3404               	retlw	4
   223  0585  3405               	retlw	5
   224  0586  3406               	retlw	6
   225  0587  3407               	retlw	7
   226  0588  3408               	retlw	8
   227  0589  3409               	retlw	9
   228  000D                     _PORTB	set	13
   229  000D                     _PORTBbits	set	13
   230  000F                     _PORTD	set	15
   231  0015                     _TMR0	set	21
   232  005F                     _GIE	set	95
   233  008D                     _RCIF	set	141
   234  005D                     _TMR0IE	set	93
   235  005A                     _TMR0IF	set	90
   236  008C                     _TXIF	set	140
   237  0095                     _OPTION_REGbits	set	149
   238  008D                     _TRISB	set	141
   239  008F                     _TRISD	set	143
   240  048D                     _RCIE	set	1165
   241  010D                     _LATB	set	269
   242  010F                     _LATD	set	271
   243  018D                     _ANSELB	set	397
   244  018F                     _ANSELD	set	399
   245  0199                     _RCREG	set	409
   246  019B                     _SPBRGL	set	411
   247  019A                     _TXREG	set	410
   248  0CFB                     _BRG16	set	3323
   249  0CF2                     _BRGH	set	3314
   250  0CEC                     _CREN	set	3308
   251  0CEF                     _SPEN	set	3311
   252  0CF4                     _SYNC	set	3316
   253  0CF5                     _TXEN	set	3317
   254                           
   255                           ; #config settings
   256  0000                     
   257                           	psect	cinit
   258  00F1                     start_initialization:	
   259  00F1                     __initialization:	
   260                           
   261                           ; Clear objects allocated to BANK0
   262  00F1  01CF               	clrf	__pbssBANK0& (0+127)
   263  00F2  01D0               	clrf	(__pbssBANK0+1)& (0+127)
   264                           
   265                           ; Clear objects allocated to BANK1
   266  00F3  30A0               	movlw	low __pbssBANK1
   267  00F4  0084               	movwf	4
   268  00F5  3000               	movlw	high __pbssBANK1
   269  00F6  0085               	movwf	5
   270  00F7  3032               	movlw	50
   271  00F8  3185  2592  3180   	fcall	clear_ram0
   272                           
   273                           ; Initialize objects allocated to BANK0
   274  00FB  3080               	movlw	low __pidataBANK0
   275  00FC  0084               	movwf	4
   276  00FD  3085               	movlw	(high __pidataBANK0)| (0+128)
   277  00FE  0085               	movwf	5
   278  00FF  3045               	movlw	low __pdataBANK0
   279  0100  0086               	movwf	6
   280  0101  3000               	movlw	high __pdataBANK0
   281  0102  0087               	movwf	7
   282  0103  300A               	movlw	10
   283  0104  3185  2598         	fcall	init_ram
   284  0106                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0106                     __end_of__initialization:	
   288  0106  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   289  0107  0020               	movlb	0
   290  0108  3184  2C96         	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	bssBANK0
   293  004F                     __pbssBANK0:	
   294  004F                     _br_funkcija:	
   295  004F                     	ds	2
   296                           
   297                           	psect	dataBANK0
   298  0045                     __pdataBANK0:	
   299  0045                     _cifre:	
   300  0045                     	ds	10
   301                           
   302                           	psect	bssBANK1
   303  00A0                     __pbssBANK1:	
   304  00A0                     _niz:	
   305  00A0                     	ds	50
   306                           
   307                           	psect	clrtext
   308  0592                     clear_ram0:	
   309                           ;	Called with FSR0 containing the base address, and
   310                           ;	WREG with the size to clear
   311                           
   312  0592  0064               	clrwdt	;clear the watchdog before getting into this loop
   313  0593                     clrloop0:	
   314  0593  0180               	clrf	0	;clear RAM location pointed to by FSR
   315  0594  3101               	addfsr 0,1
   316  0595  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   317  0596  2D93               	goto	clrloop0	;have we reached the end yet?
   318  0597  3400               	retlw	0	;all done for this memory range, return
   319                           
   320                           	psect	inittext
   321  0598                     init_ram:	
   322  0598  00FE               	movwf	126
   323  0599                     initloop:	
   324  0599  0012               	moviw fsr0++
   325  059A  001E               	movwi fsr1++
   326  059B  0BFE               	decfsz	126,f
   327  059C  2D99               	goto	initloop
   328  059D  3400               	retlw	0
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:	
   332  0070                     ?_write_char:	
   333  0070                     ?_command_interface:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_inicializiraj_tajmer:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_tc_int:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_init_serial:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_konfiguracija:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_dioda_1:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ??_dioda_1:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_dioda_2:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ??_dioda_2:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_dioda_3:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ??_dioda_3:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_dioda_4:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ??_dioda_4:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_inicializiraj_portove:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_read_char:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?i1___bmul:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     i1___bmul@multiplicand:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389  0070                     	ds	1
   390  0071                     ??i1___bmul:	
   391                           
   392                           ; 0 bytes @ 0x1
   393  0071                     	ds	1
   394  0072                     i1___bmul@multiplier:	
   395                           
   396                           ; 1 bytes @ 0x2
   397  0072                     	ds	1
   398  0073                     i1___bmul@product:	
   399                           
   400                           ; 1 bytes @ 0x3
   401  0073                     	ds	1
   402  0074                     ??_tc_int:	
   403                           
   404                           ; 0 bytes @ 0x4
   405  0074                     	ds	4
   406  0078                     tc_int@i:	
   407                           
   408                           ; 2 bytes @ 0x8
   409  0078                     	ds	2
   410                           
   411                           	psect	cstackBANK0
   412  0020                     __pcstackBANK0:	
   413  0020                     ??_write_char:	
   414  0020                     ??_read_char:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ??_init_serial:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_inicializiraj_portove:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ?___bmul:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ?___wmul:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     ?___awdiv:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     write_char@c:	
   433                           ; 2 bytes @ 0x0
   434                           
   435  0020                     ___bmul@multiplicand:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0020                     ___wmul@multiplier:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0020                     ___awdiv@divisor:	
   442                           ; 2 bytes @ 0x0
   443                           
   444                           
   445                           ; 2 bytes @ 0x0
   446  0020                     	ds	1
   447  0021                     ??___bmul:	
   448                           
   449                           ; 0 bytes @ 0x1
   450  0021                     	ds	1
   451  0022                     ___bmul@product:	
   452  0022                     ___wmul@multiplicand:	
   453                           ; 1 bytes @ 0x2
   454                           
   455  0022                     ___awdiv@dividend:	
   456                           ; 2 bytes @ 0x2
   457                           
   458                           
   459                           ; 2 bytes @ 0x2
   460  0022                     	ds	1
   461  0023                     ___bmul@multiplier:	
   462                           
   463                           ; 1 bytes @ 0x3
   464  0023                     	ds	1
   465  0024                     ?_aktiviraj:	
   466  0024                     ?_deaktiviraj:	
   467                           ; 0 bytes @ 0x4
   468                           
   469  0024                     ??_inicializiraj_tajmer:	
   470                           ; 0 bytes @ 0x4
   471                           
   472  0024                     ?_Ticker_attach_ms:	
   473                           ; 0 bytes @ 0x4
   474                           
   475  0024                     ??___wmul:	
   476                           ; 0 bytes @ 0x4
   477                           
   478  0024                     ??___awdiv:	
   479                           ; 0 bytes @ 0x4
   480                           
   481  0024                     aktiviraj@br_task:	
   482                           ; 0 bytes @ 0x4
   483                           
   484  0024                     deaktiviraj@br_task:	
   485                           ; 2 bytes @ 0x4
   486                           
   487  0024                     Ticker_attach_ms@f:	
   488                           ; 2 bytes @ 0x4
   489                           
   490  0024                     ___wmul@product:	
   491                           ; 2 bytes @ 0x4
   492                           
   493                           
   494                           ; 2 bytes @ 0x4
   495  0024                     	ds	1
   496  0025                     ___awdiv@counter:	
   497  0025                     inicializiraj_tajmer@i:	
   498                           ; 1 bytes @ 0x5
   499                           
   500                           
   501                           ; 2 bytes @ 0x5
   502  0025                     	ds	1
   503  0026                     ?_up_date_time:	
   504  0026                     ??_aktiviraj:	
   505                           ; 0 bytes @ 0x6
   506                           
   507  0026                     ??_deaktiviraj:	
   508                           ; 0 bytes @ 0x6
   509                           
   510  0026                     ?_Ticker_attach:	
   511                           ; 0 bytes @ 0x6
   512                           
   513  0026                     ___awdiv@sign:	
   514                           ; 0 bytes @ 0x6
   515                           
   516  0026                     up_date_time@br_taska:	
   517                           ; 1 bytes @ 0x6
   518                           
   519  0026                     Ticker_attach@f:	
   520                           ; 2 bytes @ 0x6
   521                           
   522  0026                     Ticker_attach_ms@vrijeme:	
   523                           ; 2 bytes @ 0x6
   524                           
   525                           
   526                           ; 2 bytes @ 0x6
   527  0026                     	ds	1
   528  0027                     ??_konfiguracija:	
   529  0027                     ___awdiv@quotient:	
   530                           ; 0 bytes @ 0x7
   531                           
   532                           
   533                           ; 2 bytes @ 0x7
   534  0027                     	ds	1
   535  0028                     ??_Ticker_attach_ms:	
   536  0028                     up_date_time@t:	
   537                           ; 0 bytes @ 0x8
   538                           
   539  0028                     Ticker_attach@vrijeme:	
   540                           ; 2 bytes @ 0x8
   541                           
   542                           
   543                           ; 2 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     ?_write_number:	
   546  0029                     ?_read_number:	
   547                           ; 0 bytes @ 0x9
   548                           
   549  0029                     write_number@broj:	
   550                           ; 2 bytes @ 0x9
   551                           
   552                           
   553                           ; 2 bytes @ 0x9
   554  0029                     	ds	1
   555  002A                     ??_Ticker_attach:	
   556  002A                     up_date_time@ms_or_sec:	
   557                           ; 0 bytes @ 0xA
   558                           
   559                           
   560                           ; 2 bytes @ 0xA
   561  002A                     	ds	1
   562  002B                     ??_write_number:	
   563  002B                     ??_read_number:	
   564                           ; 0 bytes @ 0xB
   565                           
   566  002B                     Ticker_attach_ms@i:	
   567                           ; 0 bytes @ 0xB
   568                           
   569                           
   570                           ; 2 bytes @ 0xB
   571  002B                     	ds	1
   572  002C                     ??_up_date_time:	
   573  002C                     read_number@buffer:	
   574                           ; 0 bytes @ 0xC
   575                           
   576                           
   577                           ; 4 bytes @ 0xC
   578  002C                     	ds	1
   579  002D                     write_number@pom:	
   580  002D                     Ticker_attach@i:	
   581                           ; 2 bytes @ 0xD
   582                           
   583                           
   584                           ; 2 bytes @ 0xD
   585  002D                     	ds	2
   586  002F                     write_number@i:	
   587                           
   588                           ; 2 bytes @ 0xF
   589  002F                     	ds	1
   590  0030                     read_number@broj:	
   591                           
   592                           ; 2 bytes @ 0x10
   593  0030                     	ds	1
   594  0031                     write_number@t:	
   595                           
   596                           ; 2 bytes @ 0x11
   597  0031                     	ds	1
   598  0032                     read_number@t:	
   599                           
   600                           ; 2 bytes @ 0x12
   601  0032                     	ds	2
   602  0034                     read_number@i:	
   603                           
   604                           ; 2 bytes @ 0x14
   605  0034                     	ds	2
   606  0036                     read_number@i_158:	
   607                           
   608                           ; 2 bytes @ 0x16
   609  0036                     	ds	2
   610  0038                     ??_command_interface:	
   611                           
   612                           ; 0 bytes @ 0x18
   613  0038                     	ds	1
   614  0039                     command_interface@t:	
   615                           
   616                           ; 2 bytes @ 0x19
   617  0039                     	ds	2
   618  003B                     command_interface@ms_or_sec:	
   619                           
   620                           ; 2 bytes @ 0x1B
   621  003B                     	ds	2
   622  003D                     command_interface@naredba:	
   623                           
   624                           ; 1 bytes @ 0x1D
   625  003D                     	ds	1
   626  003E                     command_interface@i:	
   627                           
   628                           ; 2 bytes @ 0x1E
   629  003E                     	ds	2
   630  0040                     command_interface@i_148:	
   631                           
   632                           ; 2 bytes @ 0x20
   633  0040                     	ds	2
   634  0042                     command_interface@br_taska:	
   635                           
   636                           ; 2 bytes @ 0x22
   637  0042                     	ds	2
   638  0044                     command_interface@br:	
   639                           
   640                           ; 1 bytes @ 0x24
   641  0044                     	ds	1
   642  0045                     ??_main:	
   643                           
   644                           	psect	maintext
   645  0496                     __pmaintext:	
   646                           ; 0 bytes @ 0x25
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 43 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;		None               void
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : B1F/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels required when called:    5
   672 ;; This function calls:
   673 ;;		_Ticker_attach
   674 ;;		_Ticker_attach_ms
   675 ;;		_command_interface
   676 ;;		_inicializiraj_portove
   677 ;;		_konfiguracija
   678 ;; This function is called by:
   679 ;;		Startup code after reset
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _main
   685  0496                     _main:	
   686                           
   687                           ;main.c: 44: konfiguracija();
   688                           
   689                           ;incstack = 0
   690                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   691  0496  3185  259E  3184   	fcall	_konfiguracija
   692                           
   693                           ;main.c: 45: inicializiraj_portove();
   694  0499  3184  24EC  3184   	fcall	_inicializiraj_portove
   695                           
   696                           ;main.c: 46: Ticker_attach_ms(&dioda_1,100);
   697  049C  3068               	movlw	low _dioda_1
   698  049D  0020               	movlb	0	; select bank0
   699  049E  00A4               	movwf	Ticker_attach_ms@f
   700  049F  3005               	movlw	high _dioda_1
   701  04A0  00A5               	movwf	Ticker_attach_ms@f+1
   702  04A1  3064               	movlw	100
   703  04A2  00A6               	movwf	Ticker_attach_ms@vrijeme
   704  04A3  3000               	movlw	0
   705  04A4  00A7               	movwf	Ticker_attach_ms@vrijeme+1
   706  04A5  3183  238B  3184   	fcall	_Ticker_attach_ms
   707                           
   708                           ;main.c: 47: Ticker_attach(&dioda_2,1);
   709  04A8  305C               	movlw	low _dioda_2
   710  04A9  0020               	movlb	0	; select bank0
   711  04AA  00A6               	movwf	Ticker_attach@f
   712  04AB  3005               	movlw	high _dioda_2
   713  04AC  00A7               	movwf	Ticker_attach@f+1
   714  04AD  3001               	movlw	1
   715  04AE  00A8               	movwf	Ticker_attach@vrijeme
   716  04AF  3000               	movlw	0
   717  04B0  00A9               	movwf	Ticker_attach@vrijeme+1
   718  04B1  3182  22C1  3184   	fcall	_Ticker_attach
   719                           
   720                           ;main.c: 48: Ticker_attach(&dioda_3,2);
   721  04B4  3050               	movlw	low _dioda_3
   722  04B5  0020               	movlb	0	; select bank0
   723  04B6  00A6               	movwf	Ticker_attach@f
   724  04B7  3005               	movlw	high _dioda_3
   725  04B8  00A7               	movwf	Ticker_attach@f+1
   726  04B9  3002               	movlw	2
   727  04BA  00A8               	movwf	Ticker_attach@vrijeme
   728  04BB  3000               	movlw	0
   729  04BC  00A9               	movwf	Ticker_attach@vrijeme+1
   730  04BD  3182  22C1  3184   	fcall	_Ticker_attach
   731                           
   732                           ;main.c: 49: Ticker_attach_ms(&dioda_4,10);
   733  04C0  3074               	movlw	low _dioda_4
   734  04C1  0020               	movlb	0	; select bank0
   735  04C2  00A4               	movwf	Ticker_attach_ms@f
   736  04C3  3005               	movlw	high _dioda_4
   737  04C4  00A5               	movwf	Ticker_attach_ms@f+1
   738  04C5  300A               	movlw	10
   739  04C6  00A6               	movwf	Ticker_attach_ms@vrijeme
   740  04C7  3000               	movlw	0
   741  04C8  00A7               	movwf	Ticker_attach_ms@vrijeme+1
   742  04C9  3183  238B  3184   	fcall	_Ticker_attach_ms
   743                           
   744                           ;main.c: 50: command_interface();
   745  04CC  3181  210A         	fcall	_command_interface
   746                           
   747                           ;main.c: 52: return;
   748  04CE  3180  28EF         	ljmp	start
   749  04D0                     __end_of_main:	
   750                           
   751                           	psect	text1
   752  059E                     __ptext1:	
   753 ;; *************** function _konfiguracija *****************
   754 ;; Defined at:
   755 ;;		line 194 in file "CLI.h"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;		None               void
   762 ;; Registers used:
   763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    4
   776 ;; This function calls:
   777 ;;		_inicializiraj_tajmer
   778 ;;		_init_serial
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _konfiguracija
   786  059E                     _konfiguracija:	
   787                           
   788                           ;CLI.h: 196: inicializiraj_tajmer();
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _konfiguracija: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   792  059E  3183  2329  3185   	fcall	_inicializiraj_tajmer
   793                           
   794                           ;CLI.h: 197: init_serial();
   795  05A1  3185  2544         	fcall	_init_serial
   796  05A3  0008               	return
   797  05A4                     __end_of_konfiguracija:	
   798                           
   799                           	psect	text2
   800  0544                     __ptext2:	
   801 ;; *************** function _init_serial *****************
   802 ;; Defined at:
   803 ;;		line 182 in file "CLI.h"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    2
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_konfiguracija
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _init_serial
   833  0544                     _init_serial:	
   834                           
   835                           ;CLI.h: 184: BRG16=0;
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _init_serial: [wreg]
   839  0544  0023               	movlb	3	; select bank3
   840  0545  119F               	bcf	31,3	;volatile
   841                           
   842                           ;CLI.h: 185: BRGH=0;
   843  0546  111E               	bcf	30,2	;volatile
   844                           
   845                           ;CLI.h: 186: SPBRGL=12;
   846  0547  300C               	movlw	12
   847  0548  009B               	movwf	27	;volatile
   848                           
   849                           ;CLI.h: 187: SYNC=0;
   850  0549  121E               	bcf	30,4	;volatile
   851                           
   852                           ;CLI.h: 188: SPEN=1;
   853  054A  179D               	bsf	29,7	;volatile
   854                           
   855                           ;CLI.h: 190: TXEN=1;
   856  054B  169E               	bsf	30,5	;volatile
   857                           
   858                           ;CLI.h: 191: CREN=1;
   859  054C  161D               	bsf	29,4	;volatile
   860                           
   861                           ;CLI.h: 192: RCIE=0;
   862  054D  0021               	movlb	1	; select bank1
   863  054E  1291               	bcf	17,5	;volatile
   864  054F  0008               	return
   865  0550                     __end_of_init_serial:	
   866                           
   867                           	psect	text3
   868  0329                     __ptext3:	
   869 ;; *************** function _inicializiraj_tajmer *****************
   870 ;; Defined at:
   871 ;;		line 114 in file "CLI.h"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  i               2    5[BANK0 ] int 
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   887 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   888 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   889 ;;Total ram usage:        3 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    3
   892 ;; This function calls:
   893 ;;		___bmul
   894 ;; This function is called by:
   895 ;;		_konfiguracija
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _inicializiraj_tajmer
   901  0329                     _inicializiraj_tajmer:	
   902                           
   903                           ;CLI.h: 115: OPTION_REGbits.PSA=0;
   904                           
   905                           ;incstack = 0
   906                           ; Regs used in _inicializiraj_tajmer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   907  0329  0021               	movlb	1	; select bank1
   908  032A  1195               	bcf	21,3	;volatile
   909                           
   910                           ;CLI.h: 116: OPTION_REGbits.TMR0CS=0;
   911  032B  1295               	bcf	21,5	;volatile
   912                           
   913                           ;CLI.h: 117: OPTION_REGbits.PS=0x02;
   914  032C  0815               	movf	21,w	;volatile
   915  032D  39F8               	andlw	-8
   916  032E  3802               	iorlw	2
   917  032F  0095               	movwf	21	;volatile
   918                           
   919                           ;CLI.h: 118: TMR0=0x06;
   920  0330  3006               	movlw	6
   921  0331  0020               	movlb	0	; select bank0
   922  0332  0095               	movwf	21	;volatile
   923                           
   924                           ;CLI.h: 119: TMR0IF=0;
   925  0333  110B               	bcf	11,2	;volatile
   926                           
   927                           ;CLI.h: 120: TMR0IE=1;
   928  0334  168B               	bsf	11,5	;volatile
   929                           
   930                           ;CLI.h: 121: GIE=1;
   931  0335  178B               	bsf	11,7	;volatile
   932                           
   933                           ;CLI.h: 123: int i=0;
   934  0336  01A5               	clrf	inicializiraj_tajmer@i
   935  0337  01A6               	clrf	inicializiraj_tajmer@i+1
   936                           
   937                           ;CLI.h: 124: for(i=0;i<5;i++){
   938  0338  01A5               	clrf	inicializiraj_tajmer@i
   939  0339  01A6               	clrf	inicializiraj_tajmer@i+1
   940  033A                     L1:	
   941  033A  0826               	movf	inicializiraj_tajmer@i+1,w
   942  033B  3A80               	xorlw	128
   943  033C  00A4               	movwf	??_inicializiraj_tajmer
   944  033D  3080               	movlw	128
   945  033E  0224               	subwf	??_inicializiraj_tajmer,w
   946  033F  1D03               	skipz
   947  0340  2B43               	goto	u1045
   948  0341  3005               	movlw	5
   949  0342  0225               	subwf	inicializiraj_tajmer@i,w
   950  0343                     u1045:	
   951  0343  1803               	btfsc	3,0
   952  0344  0008               	return
   953                           
   954                           ;CLI.h: 125: niz[i].zauzeto=0;
   955  0345  300A               	movlw	10
   956  0346  0020               	movlb	0	; select bank0
   957  0347  00A4               	movwf	??_inicializiraj_tajmer
   958  0348  0824               	movf	??_inicializiraj_tajmer,w
   959  0349  00A0               	movwf	___bmul@multiplicand
   960  034A  0825               	movf	inicializiraj_tajmer@i,w
   961  034B  3185  2500  3183   	fcall	___bmul
   962  034E  3E04               	addlw	4
   963  034F  3EA0               	addlw	(low (_niz| 0))& (0+255)
   964  0350  0086               	movwf	6
   965  0351  0187               	clrf	7
   966  0352  3000               	movlw	0
   967  0353  3FC0               	movwi [0]fsr1
   968  0354  3FC1               	movwi [1]fsr1
   969                           
   970                           ;CLI.h: 126: niz[i].brojac=0;
   971  0355  300A               	movlw	10
   972  0356  0020               	movlb	0	; select bank0
   973  0357  00A4               	movwf	??_inicializiraj_tajmer
   974  0358  0824               	movf	??_inicializiraj_tajmer,w
   975  0359  00A0               	movwf	___bmul@multiplicand
   976  035A  0825               	movf	inicializiraj_tajmer@i,w
   977  035B  3185  2500  3183   	fcall	___bmul
   978  035E  3E08               	addlw	8
   979  035F  3EA0               	addlw	(low (_niz| 0))& (0+255)
   980  0360  0086               	movwf	6
   981  0361  0187               	clrf	7
   982  0362  3000               	movlw	0
   983  0363  3FC0               	movwi [0]fsr1
   984  0364  3FC1               	movwi [1]fsr1
   985                           
   986                           ;CLI.h: 127: niz[i].vrijeme_ms=0;
   987  0365  300A               	movlw	10
   988  0366  0020               	movlb	0	; select bank0
   989  0367  00A4               	movwf	??_inicializiraj_tajmer
   990  0368  0824               	movf	??_inicializiraj_tajmer,w
   991  0369  00A0               	movwf	___bmul@multiplicand
   992  036A  0825               	movf	inicializiraj_tajmer@i,w
   993  036B  3185  2500  3183   	fcall	___bmul
   994  036E  3E02               	addlw	2
   995  036F  3EA0               	addlw	(low (_niz| 0))& (0+255)
   996  0370  0086               	movwf	6
   997  0371  0187               	clrf	7
   998  0372  3000               	movlw	0
   999  0373  3FC0               	movwi [0]fsr1
  1000  0374  3FC1               	movwi [1]fsr1
  1001                           
  1002                           ;CLI.h: 128: niz[i].start=0;
  1003  0375  300A               	movlw	10
  1004  0376  0020               	movlb	0	; select bank0
  1005  0377  00A4               	movwf	??_inicializiraj_tajmer
  1006  0378  0824               	movf	??_inicializiraj_tajmer,w
  1007  0379  00A0               	movwf	___bmul@multiplicand
  1008  037A  0825               	movf	inicializiraj_tajmer@i,w
  1009  037B  3185  2500  3183   	fcall	___bmul
  1010  037E  3E06               	addlw	6
  1011  037F  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1012  0380  0086               	movwf	6
  1013  0381  0187               	clrf	7
  1014  0382  3000               	movlw	0
  1015  0383  3FC0               	movwi [0]fsr1
  1016  0384  3FC1               	movwi [1]fsr1
  1017  0385  3001               	movlw	1
  1018  0386  0020               	movlb	0	; select bank0
  1019  0387  07A5               	addwf	inicializiraj_tajmer@i,f
  1020  0388  3000               	movlw	0
  1021  0389  3DA6               	addwfc	inicializiraj_tajmer@i+1,f
  1022  038A  2B3A               	goto	L1
  1023  038B                     __end_of_inicializiraj_tajmer:	
  1024                           
  1025                           	psect	text4
  1026  04EC                     __ptext4:	
  1027 ;; *************** function _inicializiraj_portove *****************
  1028 ;; Defined at:
  1029 ;;		line 26 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;		None               void
  1036 ;; Registers used:
  1037 ;;		status,2
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    2
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _inicializiraj_portove
  1059  04EC                     _inicializiraj_portove:	
  1060                           
  1061                           ;main.c: 28: TRISD=0x00;
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _inicializiraj_portove: [status,2]
  1065  04EC  0021               	movlb	1	; select bank1
  1066  04ED  018F               	clrf	15	;volatile
  1067                           
  1068                           ;main.c: 29: ANSELD=0x00;
  1069  04EE  0023               	movlb	3	; select bank3
  1070  04EF  018F               	clrf	15	;volatile
  1071                           
  1072                           ;main.c: 30: LATD=0x00;
  1073  04F0  0022               	movlb	2	; select bank2
  1074  04F1  018F               	clrf	15	;volatile
  1075                           
  1076                           ;main.c: 31: PORTD=0x00;
  1077  04F2  0020               	movlb	0	; select bank0
  1078  04F3  018F               	clrf	15	;volatile
  1079                           
  1080                           ;main.c: 33: TRISB=0x00;
  1081  04F4  0021               	movlb	1	; select bank1
  1082  04F5  018D               	clrf	13	;volatile
  1083                           
  1084                           ;main.c: 34: ANSELB=0x00;
  1085  04F6  0023               	movlb	3	; select bank3
  1086  04F7  018D               	clrf	13	;volatile
  1087                           
  1088                           ;main.c: 35: LATB=0x00;
  1089  04F8  0022               	movlb	2	; select bank2
  1090  04F9  018D               	clrf	13	;volatile
  1091                           
  1092                           ;main.c: 36: PORTB=0x00;
  1093  04FA  0020               	movlb	0	; select bank0
  1094  04FB  018D               	clrf	13	;volatile
  1095                           
  1096                           ;main.c: 38: PORTBbits.RB0=0;
  1097  04FC  100D               	bcf	13,0	;volatile
  1098                           
  1099                           ;main.c: 39: PORTBbits.RB2=0;
  1100  04FD  110D               	bcf	13,2	;volatile
  1101                           
  1102                           ;main.c: 40: PORTBbits.RB5=0;
  1103  04FE  128D               	bcf	13,5	;volatile
  1104  04FF  0008               	return
  1105  0500                     __end_of_inicializiraj_portove:	
  1106                           
  1107                           	psect	text5
  1108  010A                     __ptext5:	
  1109 ;; *************** function _command_interface *****************
  1110 ;; Defined at:
  1111 ;;		line 39 in file "CLI.h"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  i               2   32[BANK0 ] int 
  1116 ;;  i               2   30[BANK0 ] int 
  1117 ;;  br_taska        2   34[BANK0 ] int 
  1118 ;;  ms_or_sec       2   27[BANK0 ] int 
  1119 ;;  t               2   25[BANK0 ] int 
  1120 ;;  br              1   36[BANK0 ] unsigned char 
  1121 ;;  naredba         1   29[BANK0 ] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;		None               void
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1132 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1134 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;Total ram usage:       13 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    4
  1138 ;; This function calls:
  1139 ;;		___bmul
  1140 ;;		_aktiviraj
  1141 ;;		_deaktiviraj
  1142 ;;		_read_char
  1143 ;;		_read_number
  1144 ;;		_up_date_time
  1145 ;;		_write_char
  1146 ;;		_write_number
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _command_interface
  1154  010A                     _command_interface:	
  1155                           
  1156                           ;CLI.h: 47: switch (naredba){
  1157  010A  29C7               	goto	l85
  1158  010B                     l1263:	
  1159                           ;CLI.h: 48: case 'A':
  1160                           
  1161                           
  1162                           ;CLI.h: 49: br=read_char();
  1163  010B  3185  25A4  3181   	fcall	_read_char
  1164  010E  0020               	movlb	0	; select bank0
  1165  010F  00B8               	movwf	??_command_interface
  1166  0110  0838               	movf	??_command_interface,w
  1167  0111  00C4               	movwf	command_interface@br
  1168                           
  1169                           ;CLI.h: 50: br_taska=br -'0';
  1170  0112  0844               	movf	command_interface@br,w
  1171  0113  3ED0               	addlw	208
  1172  0114  00C2               	movwf	command_interface@br_taska
  1173  0115  30FF               	movlw	255
  1174  0116  1803               	skipnc
  1175  0117  3000               	movlw	0
  1176  0118  00C3               	movwf	command_interface@br_taska+1
  1177                           
  1178                           ;CLI.h: 51: aktiviraj(br_taska);
  1179  0119  0843               	movf	command_interface@br_taska+1,w
  1180  011A  00A5               	movwf	aktiviraj@br_task+1
  1181  011B  0842               	movf	command_interface@br_taska,w
  1182  011C  00A4               	movwf	aktiviraj@br_task
  1183  011D  3185  2512  3181   	fcall	_aktiviraj
  1184                           
  1185                           ;CLI.h: 52: break;
  1186  0120  29C7               	goto	l85
  1187  0121                     l1269:	
  1188                           ;CLI.h: 53: case 'D':
  1189                           
  1190                           
  1191                           ;CLI.h: 54: br=read_char();
  1192  0121  3185  25A4  3181   	fcall	_read_char
  1193  0124  0020               	movlb	0	; select bank0
  1194  0125  00B8               	movwf	??_command_interface
  1195  0126  0838               	movf	??_command_interface,w
  1196  0127  00C4               	movwf	command_interface@br
  1197                           
  1198                           ;CLI.h: 55: br_taska=br -'0';
  1199  0128  0844               	movf	command_interface@br,w
  1200  0129  3ED0               	addlw	208
  1201  012A  00C2               	movwf	command_interface@br_taska
  1202  012B  30FF               	movlw	255
  1203  012C  1803               	skipnc
  1204  012D  3000               	movlw	0
  1205  012E  00C3               	movwf	command_interface@br_taska+1
  1206                           
  1207                           ;CLI.h: 56: deaktiviraj(br_taska);
  1208  012F  0843               	movf	command_interface@br_taska+1,w
  1209  0130  00A5               	movwf	deaktiviraj@br_task+1
  1210  0131  0842               	movf	command_interface@br_taska,w
  1211  0132  00A4               	movwf	deaktiviraj@br_task
  1212  0133  3185  2534  3181   	fcall	_deaktiviraj
  1213                           
  1214                           ;CLI.h: 57: break;
  1215  0136  29C7               	goto	l85
  1216  0137                     l1275:	
  1217                           ;CLI.h: 58: case 'C':
  1218                           
  1219                           
  1220                           ;CLI.h: 59: write_char(br_funkcija);
  1221  0137  0020               	movlb	0	; select bank0
  1222  0138  084F               	movf	_br_funkcija,w
  1223  0139  3185  258A  3181   	fcall	_write_char
  1224                           
  1225                           ;CLI.h: 60: for(int i=0;i<5;i++){
  1226  013C  0020               	movlb	0	; select bank0
  1227  013D  01BE               	clrf	command_interface@i
  1228  013E  01BF               	clrf	command_interface@i+1
  1229  013F  083F               	movf	command_interface@i+1,w
  1230  0140  3A80               	xorlw	128
  1231  0141  00B8               	movwf	??_command_interface
  1232  0142  3080               	movlw	128
  1233  0143  0238               	subwf	??_command_interface,w
  1234  0144  1D03               	skipz
  1235  0145  2948               	goto	u1065
  1236  0146  3005               	movlw	5
  1237  0147  023E               	subwf	command_interface@i,w
  1238  0148                     u1065:	
  1239  0148  1803               	btfsc	3,0
  1240  0149  296B               	goto	l1289
  1241  014A                     l1283:	
  1242                           
  1243                           ;CLI.h: 61: write_char(niz[i].start);
  1244  014A  300A               	movlw	10
  1245  014B  0020               	movlb	0	; select bank0
  1246  014C  00B8               	movwf	??_command_interface
  1247  014D  0838               	movf	??_command_interface,w
  1248  014E  00A0               	movwf	___bmul@multiplicand
  1249  014F  083E               	movf	command_interface@i,w
  1250  0150  3185  2500  3181   	fcall	___bmul
  1251  0153  3E06               	addlw	6
  1252  0154  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1253  0155  0086               	movwf	6
  1254  0156  0187               	clrf	7
  1255  0157  0801               	movf	1,w
  1256  0158  3185  258A  3181   	fcall	_write_char
  1257  015B  3001               	movlw	1
  1258  015C  0020               	movlb	0	; select bank0
  1259  015D  07BE               	addwf	command_interface@i,f
  1260  015E  3000               	movlw	0
  1261  015F  3DBF               	addwfc	command_interface@i+1,f
  1262  0160  083F               	movf	command_interface@i+1,w
  1263  0161  3A80               	xorlw	128
  1264  0162  00B8               	movwf	??_command_interface
  1265  0163  3080               	movlw	128
  1266  0164  0238               	subwf	??_command_interface,w
  1267  0165  1D03               	skipz
  1268  0166  2969               	goto	u1075
  1269  0167  3005               	movlw	5
  1270  0168  023E               	subwf	command_interface@i,w
  1271  0169                     u1075:	
  1272  0169  1C03               	skipc
  1273  016A  294A               	goto	l1283
  1274  016B                     l1289:	
  1275                           
  1276                           ;CLI.h: 62: }
  1277                           ;CLI.h: 63: for(int i=0;i<5;i++){
  1278  016B  0020               	movlb	0	; select bank0
  1279  016C  01C0               	clrf	command_interface@i_148
  1280  016D  01C1               	clrf	command_interface@i_148+1
  1281  016E                     L2:	
  1282  016E  0841               	movf	command_interface@i_148+1,w
  1283  016F  3A80               	xorlw	128
  1284  0170  00B8               	movwf	??_command_interface
  1285  0171  3080               	movlw	128
  1286  0172  0238               	subwf	??_command_interface,w
  1287  0173  1D03               	skipz
  1288  0174  2977               	goto	u1085
  1289  0175  3005               	movlw	5
  1290  0176  0240               	subwf	command_interface@i_148,w
  1291  0177                     u1085:	
  1292  0177  1803               	btfsc	3,0
  1293  0178  29C7               	goto	l85
  1294                           
  1295                           ;CLI.h: 64: write_number(niz[i].vrijeme_ms);
  1296  0179  300A               	movlw	10
  1297  017A  0020               	movlb	0	; select bank0
  1298  017B  00B8               	movwf	??_command_interface
  1299  017C  0838               	movf	??_command_interface,w
  1300  017D  00A0               	movwf	___bmul@multiplicand
  1301  017E  0840               	movf	command_interface@i_148,w
  1302  017F  3185  2500  3181   	fcall	___bmul
  1303  0182  3E02               	addlw	2
  1304  0183  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1305  0184  0086               	movwf	6
  1306  0185  0187               	clrf	7
  1307  0186  3F40               	moviw [0]fsr1
  1308  0187  0020               	movlb	0	; select bank0
  1309  0188  00A9               	movwf	write_number@broj
  1310  0189  3F41               	moviw [1]fsr1
  1311  018A  00AA               	movwf	write_number@broj+1
  1312  018B  3182  2259  3181   	fcall	_write_number
  1313  018E  3001               	movlw	1
  1314  018F  0020               	movlb	0	; select bank0
  1315  0190  07C0               	addwf	command_interface@i_148,f
  1316  0191  3000               	movlw	0
  1317  0192  3DC1               	addwfc	command_interface@i_148+1,f
  1318  0193  296E               	goto	L2
  1319  0194                     l1301:	
  1320                           ;CLI.h: 67: case 'U':
  1321                           
  1322                           ;CLI.h: 65: }
  1323                           ;CLI.h: 66: break;
  1324                           
  1325                           
  1326                           ;CLI.h: 68: br=read_char();
  1327  0194  3185  25A4  3181   	fcall	_read_char
  1328  0197  0020               	movlb	0	; select bank0
  1329  0198  00B8               	movwf	??_command_interface
  1330  0199  0838               	movf	??_command_interface,w
  1331  019A  00C4               	movwf	command_interface@br
  1332                           
  1333                           ;CLI.h: 69: br_taska=br -'0';
  1334  019B  0844               	movf	command_interface@br,w
  1335  019C  3ED0               	addlw	208
  1336  019D  00C2               	movwf	command_interface@br_taska
  1337  019E  30FF               	movlw	255
  1338  019F  1803               	skipnc
  1339  01A0  3000               	movlw	0
  1340  01A1  00C3               	movwf	command_interface@br_taska+1
  1341                           
  1342                           ;CLI.h: 71: t=read_number();
  1343  01A2  3181  21DE  3181   	fcall	_read_number
  1344  01A5  0020               	movlb	0	; select bank0
  1345  01A6  082A               	movf	?_read_number+1,w
  1346  01A7  00BA               	movwf	command_interface@t+1
  1347  01A8  0829               	movf	?_read_number,w
  1348  01A9  00B9               	movwf	command_interface@t
  1349                           
  1350                           ;CLI.h: 72: br=read_char();
  1351  01AA  3185  25A4  3181   	fcall	_read_char
  1352  01AD  0020               	movlb	0	; select bank0
  1353  01AE  00B8               	movwf	??_command_interface
  1354  01AF  0838               	movf	??_command_interface,w
  1355  01B0  00C4               	movwf	command_interface@br
  1356                           
  1357                           ;CLI.h: 73: ms_or_sec=br -'0';
  1358  01B1  0844               	movf	command_interface@br,w
  1359  01B2  3ED0               	addlw	208
  1360  01B3  00BB               	movwf	command_interface@ms_or_sec
  1361  01B4  30FF               	movlw	255
  1362  01B5  1803               	skipnc
  1363  01B6  3000               	movlw	0
  1364  01B7  00BC               	movwf	command_interface@ms_or_sec+1
  1365                           
  1366                           ;CLI.h: 74: up_date_time(br_taska,t,ms_or_sec);
  1367  01B8  0843               	movf	command_interface@br_taska+1,w
  1368  01B9  00A7               	movwf	up_date_time@br_taska+1
  1369  01BA  0842               	movf	command_interface@br_taska,w
  1370  01BB  00A6               	movwf	up_date_time@br_taska
  1371  01BC  083A               	movf	command_interface@t+1,w
  1372  01BD  00A9               	movwf	up_date_time@t+1
  1373  01BE  0839               	movf	command_interface@t,w
  1374  01BF  00A8               	movwf	up_date_time@t
  1375  01C0  083C               	movf	command_interface@ms_or_sec+1,w
  1376  01C1  00AB               	movwf	up_date_time@ms_or_sec+1
  1377  01C2  083B               	movf	command_interface@ms_or_sec,w
  1378  01C3  00AA               	movwf	up_date_time@ms_or_sec
  1379  01C4  3183  23E9  3181   	fcall	_up_date_time
  1380  01C7                     l85:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _command_interface: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1383                           ;CLI.h: 40: char naredba;
  1384                           ;CLI.h: 41: int br_taska;
  1385                           ;CLI.h: 42: char br;
  1386                           ;CLI.h: 43: int t;
  1387                           ;CLI.h: 44: int ms_or_sec;
  1388                           ;CLI.h: 45: while(1){
  1389                           
  1390                           ;CLI.h: 76: }
  1391                           
  1392                           ;CLI.h: 75: break;
  1393                           
  1394                           
  1395                           ;CLI.h: 46: naredba=read_char();
  1396  01C7  3185  25A4  3181   	fcall	_read_char
  1397  01CA  0020               	movlb	0	; select bank0
  1398  01CB  00B8               	movwf	??_command_interface
  1399  01CC  0838               	movf	??_command_interface,w
  1400  01CD  00BD               	movwf	command_interface@naredba
  1401  01CE  0020               	movlb	0	; select bank0
  1402  01CF  083D               	movf	command_interface@naredba,w
  1403                           
  1404                           ; Switch size 1, requested type "space"
  1405                           ; Number of cases is 4, Range of values is 65 to 85
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte           13     7 (average)
  1409                           ; direct_byte           51     9 (fixed)
  1410                           ; jumptable            263     9 (fixed)
  1411                           ;	Chosen strategy is simple_byte
  1412  01D0  3A41               	xorlw	65	; case 65
  1413  01D1  1903               	skipnz
  1414  01D2  290B               	goto	l1263
  1415  01D3  3A02               	xorlw	2	; case 67
  1416  01D4  1903               	skipnz
  1417  01D5  2937               	goto	l1275
  1418  01D6  3A07               	xorlw	7	; case 68
  1419  01D7  1903               	skipnz
  1420  01D8  2921               	goto	l1269
  1421  01D9  3A11               	xorlw	17	; case 85
  1422  01DA  1903               	skipnz
  1423  01DB  2994               	goto	l1301
  1424  01DC  29C7               	goto	l85
  1425  01DD  29C7               	goto	l85
  1426  01DE                     __end_of_command_interface:	
  1427                           
  1428                           	psect	text6
  1429  0259                     __ptext6:	
  1430 ;; *************** function _write_number *****************
  1431 ;; Defined at:
  1432 ;;		line 103 in file "CLI.h"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  broj            2    9[BANK0 ] int 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  i               2   15[BANK0 ] int 
  1437 ;;  t               2   17[BANK0 ] int 
  1438 ;;  pom             2   13[BANK0 ] int 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;		None               void
  1441 ;; Registers used:
  1442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;Total ram usage:       10 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    3
  1455 ;; This function calls:
  1456 ;;		___awdiv
  1457 ;;		___wmul
  1458 ;;		_write_char
  1459 ;; This function is called by:
  1460 ;;		_command_interface
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _write_number
  1466  0259                     _write_number:	
  1467                           
  1468                           ;CLI.h: 104: int pom, t=10000;
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _write_number: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1472  0259  3010               	movlw	16
  1473  025A  0020               	movlb	0	; select bank0
  1474  025B  00B1               	movwf	write_number@t
  1475  025C  3027               	movlw	39
  1476  025D  00B2               	movwf	write_number@t+1
  1477                           
  1478                           ;CLI.h: 105: for(int i=0;i<5;i++){
  1479  025E  01AF               	clrf	write_number@i
  1480  025F  01B0               	clrf	write_number@i+1
  1481  0260  0830               	movf	write_number@i+1,w
  1482  0261  3A80               	xorlw	128
  1483  0262  00AB               	movwf	??_write_number
  1484  0263  3080               	movlw	128
  1485  0264  022B               	subwf	??_write_number,w
  1486  0265  1D03               	skipz
  1487  0266  2A69               	goto	u955
  1488  0267  3005               	movlw	5
  1489  0268  022F               	subwf	write_number@i,w
  1490  0269                     u955:	
  1491  0269  1803               	btfsc	3,0
  1492  026A  2ABD               	goto	l1177
  1493  026B                     l1165:	
  1494                           
  1495                           ;CLI.h: 106: pom=(int)(broj/t);
  1496  026B  0020               	movlb	0	; select bank0
  1497  026C  0832               	movf	write_number@t+1,w
  1498  026D  00A1               	movwf	___awdiv@divisor+1
  1499  026E  0831               	movf	write_number@t,w
  1500  026F  00A0               	movwf	___awdiv@divisor
  1501  0270  082A               	movf	write_number@broj+1,w
  1502  0271  00A3               	movwf	___awdiv@dividend+1
  1503  0272  0829               	movf	write_number@broj,w
  1504  0273  00A2               	movwf	___awdiv@dividend
  1505  0274  3184  2444  3182   	fcall	___awdiv
  1506  0277  0020               	movlb	0	; select bank0
  1507  0278  0821               	movf	?___awdiv+1,w
  1508  0279  00AE               	movwf	write_number@pom+1
  1509  027A  0820               	movf	?___awdiv,w
  1510  027B  00AD               	movwf	write_number@pom
  1511                           
  1512                           ;CLI.h: 107: write_char(cifre[pom]);
  1513  027C  082D               	movf	write_number@pom,w
  1514  027D  3E45               	addlw	(low (_cifre| 0))& (0+255)
  1515  027E  0086               	movwf	6
  1516  027F  0187               	clrf	7
  1517  0280  0801               	movf	1,w
  1518  0281  3185  258A  3182   	fcall	_write_char
  1519                           
  1520                           ;CLI.h: 108: broj=broj-pom*t;
  1521  0284  0020               	movlb	0	; select bank0
  1522  0285  082E               	movf	write_number@pom+1,w
  1523  0286  00A1               	movwf	___wmul@multiplier+1
  1524  0287  082D               	movf	write_number@pom,w
  1525  0288  00A0               	movwf	___wmul@multiplier
  1526  0289  0832               	movf	write_number@t+1,w
  1527  028A  00A3               	movwf	___wmul@multiplicand+1
  1528  028B  0831               	movf	write_number@t,w
  1529  028C  00A2               	movwf	___wmul@multiplicand
  1530  028D  3184  24D0  3182   	fcall	___wmul
  1531  0290  0020               	movlb	0	; select bank0
  1532  0291  0920               	comf	?___wmul,w
  1533  0292  00AB               	movwf	??_write_number
  1534  0293  0921               	comf	?___wmul+1,w
  1535  0294  00AC               	movwf	??_write_number+1
  1536  0295  0AAB               	incf	??_write_number,f
  1537  0296  1903               	skipnz
  1538  0297  0AAC               	incf	??_write_number+1,f
  1539  0298  0829               	movf	write_number@broj,w
  1540  0299  072B               	addwf	??_write_number,w
  1541  029A  00A9               	movwf	write_number@broj
  1542  029B  082A               	movf	write_number@broj+1,w
  1543  029C  3D2C               	addwfc	??_write_number+1,w
  1544  029D  00AA               	movwf	write_number@broj+1
  1545                           
  1546                           ;CLI.h: 109: t=t/10;
  1547  029E  300A               	movlw	10
  1548  029F  00A0               	movwf	___awdiv@divisor
  1549  02A0  3000               	movlw	0
  1550  02A1  00A1               	movwf	___awdiv@divisor+1
  1551  02A2  0832               	movf	write_number@t+1,w
  1552  02A3  00A3               	movwf	___awdiv@dividend+1
  1553  02A4  0831               	movf	write_number@t,w
  1554  02A5  00A2               	movwf	___awdiv@dividend
  1555  02A6  3184  2444  3182   	fcall	___awdiv
  1556  02A9  0020               	movlb	0	; select bank0
  1557  02AA  0821               	movf	?___awdiv+1,w
  1558  02AB  00B2               	movwf	write_number@t+1
  1559  02AC  0820               	movf	?___awdiv,w
  1560  02AD  00B1               	movwf	write_number@t
  1561  02AE  3001               	movlw	1
  1562  02AF  07AF               	addwf	write_number@i,f
  1563  02B0  3000               	movlw	0
  1564  02B1  3DB0               	addwfc	write_number@i+1,f
  1565  02B2  0830               	movf	write_number@i+1,w
  1566  02B3  3A80               	xorlw	128
  1567  02B4  00AB               	movwf	??_write_number
  1568  02B5  3080               	movlw	128
  1569  02B6  022B               	subwf	??_write_number,w
  1570  02B7  1D03               	skipz
  1571  02B8  2ABB               	goto	u965
  1572  02B9  3005               	movlw	5
  1573  02BA  022F               	subwf	write_number@i,w
  1574  02BB                     u965:	
  1575  02BB  1C03               	skipc
  1576  02BC  2A6B               	goto	l1165
  1577  02BD                     l1177:	
  1578                           
  1579                           ;CLI.h: 110: }
  1580                           ;CLI.h: 111: write_char('2');
  1581  02BD  3032               	movlw	50
  1582  02BE  3185  258A         	fcall	_write_char
  1583  02C0  0008               	return
  1584  02C1                     __end_of_write_number:	
  1585                           
  1586                           	psect	text7
  1587  03E9                     __ptext7:	
  1588 ;; *************** function _up_date_time *****************
  1589 ;; Defined at:
  1590 ;;		line 79 in file "CLI.h"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  br_taska        2    6[BANK0 ] int 
  1593 ;;  t               2    8[BANK0 ] int 
  1594 ;;  ms_or_sec       2   10[BANK0 ] int 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;		None               void
  1599 ;; Registers used:
  1600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1606 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1609 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1610 ;;Total ram usage:        7 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    3
  1613 ;; This function calls:
  1614 ;;		___bmul
  1615 ;;		___wmul
  1616 ;;		_write_char
  1617 ;; This function is called by:
  1618 ;;		_command_interface
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _up_date_time
  1624  03E9                     _up_date_time:	
  1625                           
  1626                           ;CLI.h: 80: if(ms_or_sec==1){
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _up_date_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1630  03E9  0020               	movlb	0	; select bank0
  1631  03EA  032A               	decf	up_date_time@ms_or_sec,w
  1632  03EB  042B               	iorwf	up_date_time@ms_or_sec+1,w
  1633  03EC  1D03               	btfss	3,2
  1634  03ED  2C1B               	goto	l1215
  1635                           
  1636                           ;CLI.h: 81: niz[br_taska].vrijeme_ms=t*1000;
  1637  03EE  300A               	movlw	10
  1638  03EF  00AC               	movwf	??_up_date_time
  1639  03F0  082C               	movf	??_up_date_time,w
  1640  03F1  00A0               	movwf	___bmul@multiplicand
  1641  03F2  0826               	movf	up_date_time@br_taska,w
  1642  03F3  3185  2500  3183   	fcall	___bmul
  1643  03F6  3E02               	addlw	2
  1644  03F7  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1645  03F8  0086               	movwf	6
  1646  03F9  0187               	clrf	7
  1647  03FA  0020               	movlb	0	; select bank0
  1648  03FB  0829               	movf	up_date_time@t+1,w
  1649  03FC  00A1               	movwf	___wmul@multiplier+1
  1650  03FD  0828               	movf	up_date_time@t,w
  1651  03FE  00A0               	movwf	___wmul@multiplier
  1652  03FF  30E8               	movlw	232
  1653  0400  00A2               	movwf	___wmul@multiplicand
  1654  0401  3003               	movlw	3
  1655  0402  00A3               	movwf	___wmul@multiplicand+1
  1656  0403  3184  24D0  3183   	fcall	___wmul
  1657  0406  0020               	movlb	0	; select bank0
  1658  0407  0820               	movf	?___wmul,w
  1659  0408  3FC0               	movwi [0]fsr1
  1660  0409  0821               	movf	?___wmul+1,w
  1661  040A  3FC1               	movwi [1]fsr1
  1662                           
  1663                           ;CLI.h: 82: niz[br_taska].brojac=0;
  1664  040B  300A               	movlw	10
  1665  040C  00AC               	movwf	??_up_date_time
  1666  040D  082C               	movf	??_up_date_time,w
  1667  040E  00A0               	movwf	___bmul@multiplicand
  1668  040F  0826               	movf	up_date_time@br_taska,w
  1669  0410  3185  2500  3183   	fcall	___bmul
  1670  0413  3E08               	addlw	8
  1671  0414  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1672  0415  0086               	movwf	6
  1673  0416  0187               	clrf	7
  1674  0417  3000               	movlw	0
  1675  0418  3FC0               	movwi [0]fsr1
  1676  0419  3FC1               	movwi [1]fsr1
  1677                           
  1678                           ;CLI.h: 83: }else if(ms_or_sec==0){
  1679  041A  2C40               	goto	l1219
  1680  041B                     l1215:	
  1681  041B  0020               	movlb	0	; select bank0
  1682  041C  082A               	movf	up_date_time@ms_or_sec,w
  1683  041D  042B               	iorwf	up_date_time@ms_or_sec+1,w
  1684  041E  1D03               	btfss	3,2
  1685  041F  2C40               	goto	l1219
  1686                           
  1687                           ;CLI.h: 84: niz[br_taska].vrijeme_ms=t;
  1688  0420  300A               	movlw	10
  1689  0421  00AC               	movwf	??_up_date_time
  1690  0422  082C               	movf	??_up_date_time,w
  1691  0423  00A0               	movwf	___bmul@multiplicand
  1692  0424  0826               	movf	up_date_time@br_taska,w
  1693  0425  3185  2500  3183   	fcall	___bmul
  1694  0428  3E02               	addlw	2
  1695  0429  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1696  042A  0086               	movwf	6
  1697  042B  0187               	clrf	7
  1698  042C  0020               	movlb	0	; select bank0
  1699  042D  0828               	movf	up_date_time@t,w
  1700  042E  3FC0               	movwi [0]fsr1
  1701  042F  0829               	movf	up_date_time@t+1,w
  1702  0430  3FC1               	movwi [1]fsr1
  1703                           
  1704                           ;CLI.h: 85: niz[br_taska].brojac=0;
  1705  0431  300A               	movlw	10
  1706  0432  00AC               	movwf	??_up_date_time
  1707  0433  082C               	movf	??_up_date_time,w
  1708  0434  00A0               	movwf	___bmul@multiplicand
  1709  0435  0826               	movf	up_date_time@br_taska,w
  1710  0436  3185  2500  3183   	fcall	___bmul
  1711  0439  3E08               	addlw	8
  1712  043A  3EA0               	addlw	(low (_niz| 0))& (0+255)
  1713  043B  0086               	movwf	6
  1714  043C  0187               	clrf	7
  1715  043D  3000               	movlw	0
  1716  043E  3FC0               	movwi [0]fsr1
  1717  043F  3FC1               	movwi [1]fsr1
  1718  0440                     l1219:	
  1719                           
  1720                           ;CLI.h: 86: }
  1721                           ;CLI.h: 87: write_char('0');
  1722  0440  3030               	movlw	48
  1723  0441  3185  258A         	fcall	_write_char
  1724  0443  0008               	return
  1725  0444                     __end_of_up_date_time:	
  1726                           
  1727                           	psect	text8
  1728  058A                     __ptext8:	
  1729 ;; *************** function _write_char *****************
  1730 ;; Defined at:
  1731 ;;		line 30 in file "CLI.h"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  c               1    wreg     unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  c               1    0[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;		None               void
  1738 ;; Registers used:
  1739 ;;		wreg
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;Total ram usage:        1 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    2
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_command_interface
  1756 ;;		_up_date_time
  1757 ;;		_write_number
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _write_char
  1763  058A                     _write_char:	
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in _write_char: [wreg]
  1767                           ;write_char@c stored from wreg
  1768  058A  0020               	movlb	0	; select bank0
  1769  058B  00A0               	movwf	write_char@c
  1770  058C                     l73:	
  1771                           ;CLI.h: 31: while(!TXIF);
  1772                           
  1773  058C  1E11               	btfss	17,4	;volatile
  1774  058D  2D8C               	goto	l73
  1775                           
  1776                           ;CLI.h: 32: TXREG=c;
  1777  058E  0820               	movf	write_char@c,w
  1778  058F  0023               	movlb	3	; select bank3
  1779  0590  009A               	movwf	26	;volatile
  1780  0591  0008               	return
  1781  0592                     __end_of_write_char:	
  1782                           
  1783                           	psect	text9
  1784  01DE                     __ptext9:	
  1785 ;; *************** function _read_number *****************
  1786 ;; Defined at:
  1787 ;;		line 89 in file "CLI.h"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               2   22[BANK0 ] int 
  1792 ;;  i               2   20[BANK0 ] int 
  1793 ;;  buffer          4   12[BANK0 ] unsigned char [4]
  1794 ;;  t               2   18[BANK0 ] int 
  1795 ;;  broj            2   16[BANK0 ] int 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  2    9[BANK0 ] int 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1808 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;Total ram usage:       15 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    3
  1812 ;; This function calls:
  1813 ;;		___awdiv
  1814 ;;		___wmul
  1815 ;; This function is called by:
  1816 ;;		_command_interface
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _read_number
  1822  01DE                     _read_number:	
  1823                           
  1824                           ;CLI.h: 90: char buffer[4];
  1825                           ;CLI.h: 91: for(int i=0;i<4;i++){
  1826                           
  1827                           ;incstack = 0
  1828                           ; Regs used in _read_number: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1829  01DE  0020               	movlb	0	; select bank0
  1830  01DF  01B4               	clrf	read_number@i
  1831  01E0  01B5               	clrf	read_number@i+1
  1832  01E1  0835               	movf	read_number@i+1,w
  1833  01E2  3A80               	xorlw	128
  1834  01E3  00AB               	movwf	??_read_number
  1835  01E4  3080               	movlw	128
  1836  01E5  022B               	subwf	??_read_number,w
  1837  01E6  1D03               	skipz
  1838  01E7  29EA               	goto	u975
  1839  01E8  3004               	movlw	4
  1840  01E9  0234               	subwf	read_number@i,w
  1841  01EA                     u975:	
  1842  01EA  1803               	btfsc	3,0
  1843  01EB  2A08               	goto	l1191
  1844  01EC                     l109:	
  1845                           ;CLI.h: 92: while(!RCIF);
  1846                           
  1847  01EC  0020               	movlb	0	; select bank0
  1848  01ED  1E91               	btfss	17,5	;volatile
  1849  01EE  29EC               	goto	l109
  1850                           
  1851                           ;CLI.h: 93: buffer[i]=RCREG;
  1852  01EF  0023               	movlb	3	; select bank3
  1853  01F0  0819               	movf	25,w	;volatile
  1854  01F1  0020               	movlb	0	; select bank0
  1855  01F2  00AB               	movwf	??_read_number
  1856  01F3  0834               	movf	read_number@i,w
  1857  01F4  3E2C               	addlw	(low (read_number@buffer| 0))& (0+255)
  1858  01F5  0086               	movwf	6
  1859  01F6  0187               	clrf	7
  1860  01F7  082B               	movf	??_read_number,w
  1861  01F8  0081               	movwf	1
  1862  01F9  3001               	movlw	1
  1863  01FA  07B4               	addwf	read_number@i,f
  1864  01FB  3000               	movlw	0
  1865  01FC  3DB5               	addwfc	read_number@i+1,f
  1866  01FD  0835               	movf	read_number@i+1,w
  1867  01FE  3A80               	xorlw	128
  1868  01FF  00AB               	movwf	??_read_number
  1869  0200  3080               	movlw	128
  1870  0201  022B               	subwf	??_read_number,w
  1871  0202  1D03               	skipz
  1872  0203  2A06               	goto	u995
  1873  0204  3004               	movlw	4
  1874  0205  0234               	subwf	read_number@i,w
  1875  0206                     u995:	
  1876  0206  1C03               	skipc
  1877  0207  29EC               	goto	l109
  1878  0208                     l1191:	
  1879                           
  1880                           ;CLI.h: 94: }
  1881                           ;CLI.h: 95: int broj=0,t=1000;
  1882  0208  0020               	movlb	0	; select bank0
  1883  0209  01B0               	clrf	read_number@broj
  1884  020A  01B1               	clrf	read_number@broj+1
  1885  020B  30E8               	movlw	232
  1886  020C  00B2               	movwf	read_number@t
  1887  020D  3003               	movlw	3
  1888  020E  00B3               	movwf	read_number@t+1
  1889                           
  1890                           ;CLI.h: 96: for(int i=0;i<4;i++){
  1891  020F  01B6               	clrf	read_number@i_158
  1892  0210  01B7               	clrf	read_number@i_158+1
  1893  0211  0837               	movf	read_number@i_158+1,w
  1894  0212  3A80               	xorlw	128
  1895  0213  00AB               	movwf	??_read_number
  1896  0214  3080               	movlw	128
  1897  0215  022B               	subwf	??_read_number,w
  1898  0216  1D03               	skipz
  1899  0217  2A1A               	goto	u1005
  1900  0218  3004               	movlw	4
  1901  0219  0236               	subwf	read_number@i_158,w
  1902  021A                     u1005:	
  1903  021A  1803               	btfsc	3,0
  1904  021B  2A53               	goto	l1207
  1905  021C                     l1199:	
  1906                           
  1907                           ;CLI.h: 97: broj+=(buffer[i]-'0')*t;
  1908  021C  0020               	movlb	0	; select bank0
  1909  021D  0836               	movf	read_number@i_158,w
  1910  021E  3E2C               	addlw	(low (read_number@buffer| 0))& (0+255)
  1911  021F  0086               	movwf	6
  1912  0220  0187               	clrf	7
  1913  0221  0801               	movf	1,w
  1914  0222  3ED0               	addlw	208
  1915  0223  00A0               	movwf	___wmul@multiplier
  1916  0224  30FF               	movlw	255
  1917  0225  1803               	skipnc
  1918  0226  3000               	movlw	0
  1919  0227  00A1               	movwf	___wmul@multiplier+1
  1920  0228  0833               	movf	read_number@t+1,w
  1921  0229  00A3               	movwf	___wmul@multiplicand+1
  1922  022A  0832               	movf	read_number@t,w
  1923  022B  00A2               	movwf	___wmul@multiplicand
  1924  022C  3184  24D0  3181   	fcall	___wmul
  1925  022F  0020               	movlb	0	; select bank0
  1926  0230  0820               	movf	?___wmul,w
  1927  0231  07B0               	addwf	read_number@broj,f
  1928  0232  0821               	movf	?___wmul+1,w
  1929  0233  3DB1               	addwfc	read_number@broj+1,f
  1930                           
  1931                           ;CLI.h: 98: t=t/10;
  1932  0234  300A               	movlw	10
  1933  0235  00A0               	movwf	___awdiv@divisor
  1934  0236  3000               	movlw	0
  1935  0237  00A1               	movwf	___awdiv@divisor+1
  1936  0238  0833               	movf	read_number@t+1,w
  1937  0239  00A3               	movwf	___awdiv@dividend+1
  1938  023A  0832               	movf	read_number@t,w
  1939  023B  00A2               	movwf	___awdiv@dividend
  1940  023C  3184  2444  3181   	fcall	___awdiv
  1941  023F  0020               	movlb	0	; select bank0
  1942  0240  0821               	movf	?___awdiv+1,w
  1943  0241  00B3               	movwf	read_number@t+1
  1944  0242  0820               	movf	?___awdiv,w
  1945  0243  00B2               	movwf	read_number@t
  1946  0244  3001               	movlw	1
  1947  0245  07B6               	addwf	read_number@i_158,f
  1948  0246  3000               	movlw	0
  1949  0247  3DB7               	addwfc	read_number@i_158+1,f
  1950  0248  0837               	movf	read_number@i_158+1,w
  1951  0249  3A80               	xorlw	128
  1952  024A  00AB               	movwf	??_read_number
  1953  024B  3080               	movlw	128
  1954  024C  022B               	subwf	??_read_number,w
  1955  024D  1D03               	skipz
  1956  024E  2A51               	goto	u1015
  1957  024F  3004               	movlw	4
  1958  0250  0236               	subwf	read_number@i_158,w
  1959  0251                     u1015:	
  1960  0251  1C03               	skipc
  1961  0252  2A1C               	goto	l1199
  1962  0253                     l1207:	
  1963                           
  1964                           ;CLI.h: 99: }
  1965                           ;CLI.h: 100: return broj;
  1966  0253  0020               	movlb	0	; select bank0
  1967  0254  0831               	movf	read_number@broj+1,w
  1968  0255  00AA               	movwf	?_read_number+1
  1969  0256  0830               	movf	read_number@broj,w
  1970  0257  00A9               	movwf	?_read_number
  1971  0258  0008               	return
  1972  0259                     __end_of_read_number:	
  1973                           
  1974                           	psect	text10
  1975  0444                     __ptext10:	
  1976 ;; *************** function ___awdiv *****************
  1977 ;; Defined at:
  1978 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  divisor         2    0[BANK0 ] int 
  1981 ;;  dividend        2    2[BANK0 ] int 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  quotient        2    7[BANK0 ] int 
  1984 ;;  sign            1    6[BANK0 ] unsigned char 
  1985 ;;  counter         1    5[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2    0[BANK0 ] int 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;Total ram usage:        9 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    2
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_read_number
  2006 ;;		_write_number
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function ___awdiv
  2012  0444                     ___awdiv:	
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2016  0444  0020               	movlb	0	; select bank0
  2017  0445  01A6               	clrf	___awdiv@sign
  2018  0446  1FA1               	btfss	___awdiv@divisor+1,7
  2019  0447  2C4F               	goto	l1111
  2020  0448  09A0               	comf	___awdiv@divisor,f
  2021  0449  09A1               	comf	___awdiv@divisor+1,f
  2022  044A  0AA0               	incf	___awdiv@divisor,f
  2023  044B  1903               	skipnz
  2024  044C  0AA1               	incf	___awdiv@divisor+1,f
  2025  044D  01A6               	clrf	___awdiv@sign
  2026  044E  0AA6               	incf	___awdiv@sign,f
  2027  044F                     l1111:	
  2028  044F  1FA3               	btfss	___awdiv@dividend+1,7
  2029  0450  2C5A               	goto	l1117
  2030  0451  09A2               	comf	___awdiv@dividend,f
  2031  0452  09A3               	comf	___awdiv@dividend+1,f
  2032  0453  0AA2               	incf	___awdiv@dividend,f
  2033  0454  1903               	skipnz
  2034  0455  0AA3               	incf	___awdiv@dividend+1,f
  2035  0456  3001               	movlw	1
  2036  0457  00A4               	movwf	??___awdiv
  2037  0458  0824               	movf	??___awdiv,w
  2038  0459  06A6               	xorwf	___awdiv@sign,f
  2039  045A                     l1117:	
  2040  045A  01A7               	clrf	___awdiv@quotient
  2041  045B  01A8               	clrf	___awdiv@quotient+1
  2042  045C  0820               	movf	___awdiv@divisor,w
  2043  045D  0421               	iorwf	___awdiv@divisor+1,w
  2044  045E  1903               	btfsc	3,2
  2045  045F  2C89               	goto	l1139
  2046  0460  01A5               	clrf	___awdiv@counter
  2047  0461  0AA5               	incf	___awdiv@counter,f
  2048  0462                     l1127:	
  2049  0462  1BA1               	btfsc	___awdiv@divisor+1,7
  2050  0463  2C6E               	goto	l1129
  2051  0464  3001               	movlw	1
  2052  0465                     u875:	
  2053  0465  35A0               	lslf	___awdiv@divisor,f
  2054  0466  0DA1               	rlf	___awdiv@divisor+1,f
  2055  0467  0B89               	decfsz	9,f
  2056  0468  2C65               	goto	u875
  2057  0469  3001               	movlw	1
  2058  046A  00A4               	movwf	??___awdiv
  2059  046B  0824               	movf	??___awdiv,w
  2060  046C  07A5               	addwf	___awdiv@counter,f
  2061  046D  2C62               	goto	l1127
  2062  046E                     l1129:	
  2063  046E  3001               	movlw	1
  2064  046F                     u895:	
  2065  046F  35A7               	lslf	___awdiv@quotient,f
  2066  0470  0DA8               	rlf	___awdiv@quotient+1,f
  2067  0471  0B89               	decfsz	9,f
  2068  0472  2C6F               	goto	u895
  2069  0473  0821               	movf	___awdiv@divisor+1,w
  2070  0474  0223               	subwf	___awdiv@dividend+1,w
  2071  0475  1D03               	skipz
  2072  0476  2C79               	goto	u905
  2073  0477  0820               	movf	___awdiv@divisor,w
  2074  0478  0222               	subwf	___awdiv@dividend,w
  2075  0479                     u905:	
  2076  0479  1C03               	skipc
  2077  047A  2C80               	goto	l1135
  2078  047B  0820               	movf	___awdiv@divisor,w
  2079  047C  02A2               	subwf	___awdiv@dividend,f
  2080  047D  0821               	movf	___awdiv@divisor+1,w
  2081  047E  3BA3               	subwfb	___awdiv@dividend+1,f
  2082  047F  1427               	bsf	___awdiv@quotient,0
  2083  0480                     l1135:	
  2084  0480  3001               	movlw	1
  2085  0481                     u915:	
  2086  0481  36A1               	lsrf	___awdiv@divisor+1,f
  2087  0482  0CA0               	rrf	___awdiv@divisor,f
  2088  0483  0B89               	decfsz	9,f
  2089  0484  2C81               	goto	u915
  2090  0485  3001               	movlw	1
  2091  0486  02A5               	subwf	___awdiv@counter,f
  2092  0487  1D03               	btfss	3,2
  2093  0488  2C6E               	goto	l1129
  2094  0489                     l1139:	
  2095  0489  0826               	movf	___awdiv@sign,w
  2096  048A  1903               	btfsc	3,2
  2097  048B  2C91               	goto	l1143
  2098  048C  09A7               	comf	___awdiv@quotient,f
  2099  048D  09A8               	comf	___awdiv@quotient+1,f
  2100  048E  0AA7               	incf	___awdiv@quotient,f
  2101  048F  1903               	skipnz
  2102  0490  0AA8               	incf	___awdiv@quotient+1,f
  2103  0491                     l1143:	
  2104  0491  0828               	movf	___awdiv@quotient+1,w
  2105  0492  00A1               	movwf	?___awdiv+1
  2106  0493  0827               	movf	___awdiv@quotient,w
  2107  0494  00A0               	movwf	?___awdiv
  2108  0495  0008               	return
  2109  0496                     __end_of___awdiv:	
  2110                           
  2111                           	psect	text11
  2112  05A4                     __ptext11:	
  2113 ;; *************** function _read_char *****************
  2114 ;; Defined at:
  2115 ;;		line 35 in file "CLI.h"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      unsigned char 
  2122 ;; Registers used:
  2123 ;;		wreg
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_command_interface
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _read_char
  2145  05A4                     _read_char:	
  2146  05A4                     l79:	
  2147                           ;CLI.h: 36: while(!RCIF);
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _read_char: [wreg]
  2151                           
  2152  05A4  0020               	movlb	0	; select bank0
  2153  05A5  1E91               	btfss	17,5	;volatile
  2154  05A6  2DA4               	goto	l79
  2155                           
  2156                           ;CLI.h: 37: return RCREG;
  2157  05A7  0023               	movlb	3	; select bank3
  2158  05A8  0819               	movf	25,w	;volatile
  2159  05A9  0008               	return
  2160  05AA                     __end_of_read_char:	
  2161                           
  2162                           	psect	text12
  2163  0534                     __ptext12:	
  2164 ;; *************** function _deaktiviraj *****************
  2165 ;; Defined at:
  2166 ;;		line 27 in file "CLI.h"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  br_task         2    4[BANK0 ] int 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;		None               void
  2173 ;; Registers used:
  2174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2184 ;;Total ram usage:        3 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		___bmul
  2189 ;; This function is called by:
  2190 ;;		_command_interface
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           
  2195                           ;psect for function _deaktiviraj
  2196  0534                     _deaktiviraj:	
  2197                           
  2198                           ;CLI.h: 28: niz[br_task].start=0;
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _deaktiviraj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2202  0534  300A               	movlw	10
  2203  0535  0020               	movlb	0	; select bank0
  2204  0536  00A6               	movwf	??_deaktiviraj
  2205  0537  0826               	movf	??_deaktiviraj,w
  2206  0538  00A0               	movwf	___bmul@multiplicand
  2207  0539  0824               	movf	deaktiviraj@br_task,w
  2208  053A  3185  2500         	fcall	___bmul
  2209  053C  3E06               	addlw	6
  2210  053D  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2211  053E  0086               	movwf	6
  2212  053F  0187               	clrf	7
  2213  0540  3000               	movlw	0
  2214  0541  3FC0               	movwi [0]fsr1
  2215  0542  3FC1               	movwi [1]fsr1
  2216  0543  0008               	return
  2217  0544                     __end_of_deaktiviraj:	
  2218                           
  2219                           	psect	text13
  2220  0512                     __ptext13:	
  2221 ;; *************** function _aktiviraj *****************
  2222 ;; Defined at:
  2223 ;;		line 24 in file "CLI.h"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  br_task         2    4[BANK0 ] int 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;		None               void
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;Total ram usage:        3 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    3
  2244 ;; This function calls:
  2245 ;;		___bmul
  2246 ;; This function is called by:
  2247 ;;		_command_interface
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _aktiviraj
  2253  0512                     _aktiviraj:	
  2254                           
  2255                           ;CLI.h: 25: niz[br_task].start=1;
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _aktiviraj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2259  0512  300A               	movlw	10
  2260  0513  0020               	movlb	0	; select bank0
  2261  0514  00A6               	movwf	??_aktiviraj
  2262  0515  0826               	movf	??_aktiviraj,w
  2263  0516  00A0               	movwf	___bmul@multiplicand
  2264  0517  0824               	movf	aktiviraj@br_task,w
  2265  0518  3185  2500         	fcall	___bmul
  2266  051A  3E06               	addlw	6
  2267  051B  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2268  051C  0086               	movwf	6
  2269  051D  0187               	clrf	7
  2270  051E  3001               	movlw	1
  2271  051F  3FC0               	movwi [0]fsr1
  2272  0520  3000               	movlw	0
  2273  0521  3FC1               	movwi [1]fsr1
  2274  0522  0008               	return
  2275  0523                     __end_of_aktiviraj:	
  2276                           
  2277                           	psect	text14
  2278  038B                     __ptext14:	
  2279 ;; *************** function _Ticker_attach_ms *****************
  2280 ;; Defined at:
  2281 ;;		line 144 in file "CLI.h"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  f               2    4[BANK0 ] PTR FTN()void 
  2284 ;;		 -> dioda_4(0), dioda_1(0), 
  2285 ;;  vrijeme         2    6[BANK0 ] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  i               2   11[BANK0 ] int 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;		None               void
  2290 ;; Registers used:
  2291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2297 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2299 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;Total ram usage:        9 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    3
  2304 ;; This function calls:
  2305 ;;		___bmul
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _Ticker_attach_ms
  2313  038B                     _Ticker_attach_ms:	
  2314                           
  2315                           ;CLI.h: 145: int i=0;
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _Ticker_attach_ms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2319  038B  0020               	movlb	0	; select bank0
  2320  038C  01AB               	clrf	Ticker_attach_ms@i
  2321  038D  01AC               	clrf	Ticker_attach_ms@i+1
  2322                           
  2323                           ;CLI.h: 146: for(i=0;i<5;i++){
  2324  038E  01AB               	clrf	Ticker_attach_ms@i
  2325  038F  01AC               	clrf	Ticker_attach_ms@i+1
  2326  0390                     L3:	
  2327  0390  082C               	movf	Ticker_attach_ms@i+1,w
  2328  0391  3A80               	xorlw	128
  2329  0392  00A8               	movwf	??_Ticker_attach_ms
  2330  0393  3080               	movlw	128
  2331  0394  0228               	subwf	??_Ticker_attach_ms,w
  2332  0395  1D03               	skipz
  2333  0396  2B99               	goto	u1135
  2334  0397  3005               	movlw	5
  2335  0398  022B               	subwf	Ticker_attach_ms@i,w
  2336  0399                     u1135:	
  2337  0399  1803               	btfsc	3,0
  2338  039A  0008               	return
  2339                           
  2340                           ;CLI.h: 147: if(niz[i].zauzeto==0){
  2341  039B  300A               	movlw	10
  2342  039C  0020               	movlb	0	; select bank0
  2343  039D  00A8               	movwf	??_Ticker_attach_ms
  2344  039E  0828               	movf	??_Ticker_attach_ms,w
  2345  039F  00A0               	movwf	___bmul@multiplicand
  2346  03A0  082B               	movf	Ticker_attach_ms@i,w
  2347  03A1  3185  2500  3183   	fcall	___bmul
  2348  03A4  3E04               	addlw	4
  2349  03A5  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2350  03A6  0086               	movwf	6
  2351  03A7  0187               	clrf	7
  2352  03A8  0016               	moviw fsr1++
  2353  03A9  0401               	iorwf	1,w
  2354  03AA  1D03               	btfss	3,2
  2355  03AB  2BE3               	goto	l1345
  2356                           
  2357                           ;CLI.h: 148: niz[i].f=(*&f);
  2358  03AC  300A               	movlw	10
  2359  03AD  0020               	movlb	0	; select bank0
  2360  03AE  00A8               	movwf	??_Ticker_attach_ms
  2361  03AF  0828               	movf	??_Ticker_attach_ms,w
  2362  03B0  00A0               	movwf	___bmul@multiplicand
  2363  03B1  082B               	movf	Ticker_attach_ms@i,w
  2364  03B2  3185  2500  3183   	fcall	___bmul
  2365  03B5  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2366  03B6  0086               	movwf	6
  2367  03B7  0187               	clrf	7
  2368  03B8  0020               	movlb	0	; select bank0
  2369  03B9  0824               	movf	Ticker_attach_ms@f,w
  2370  03BA  3FC0               	movwi [0]fsr1
  2371  03BB  0825               	movf	Ticker_attach_ms@f+1,w
  2372  03BC  3FC1               	movwi [1]fsr1
  2373                           
  2374                           ;CLI.h: 149: niz[i].vrijeme_ms=vrijeme;
  2375  03BD  300A               	movlw	10
  2376  03BE  00A8               	movwf	??_Ticker_attach_ms
  2377  03BF  0828               	movf	??_Ticker_attach_ms,w
  2378  03C0  00A0               	movwf	___bmul@multiplicand
  2379  03C1  082B               	movf	Ticker_attach_ms@i,w
  2380  03C2  3185  2500  3183   	fcall	___bmul
  2381  03C5  3E02               	addlw	2
  2382  03C6  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2383  03C7  0086               	movwf	6
  2384  03C8  0187               	clrf	7
  2385  03C9  0020               	movlb	0	; select bank0
  2386  03CA  0826               	movf	Ticker_attach_ms@vrijeme,w
  2387  03CB  3FC0               	movwi [0]fsr1
  2388  03CC  0827               	movf	Ticker_attach_ms@vrijeme+1,w
  2389  03CD  3FC1               	movwi [1]fsr1
  2390                           
  2391                           ;CLI.h: 150: niz[i].zauzeto=1;
  2392  03CE  300A               	movlw	10
  2393  03CF  00A8               	movwf	??_Ticker_attach_ms
  2394  03D0  0828               	movf	??_Ticker_attach_ms,w
  2395  03D1  00A0               	movwf	___bmul@multiplicand
  2396  03D2  082B               	movf	Ticker_attach_ms@i,w
  2397  03D3  3185  2500         	fcall	___bmul
  2398  03D5  3E04               	addlw	4
  2399  03D6  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2400  03D7  0086               	movwf	6
  2401  03D8  0187               	clrf	7
  2402  03D9  3001               	movlw	1
  2403  03DA  3FC0               	movwi [0]fsr1
  2404  03DB  3000               	movlw	0
  2405  03DC  3FC1               	movwi [1]fsr1
  2406                           
  2407                           ;CLI.h: 151: br_funkcija++;
  2408  03DD  3001               	movlw	1
  2409  03DE  0020               	movlb	0	; select bank0
  2410  03DF  07CF               	addwf	_br_funkcija,f
  2411  03E0  3000               	movlw	0
  2412  03E1  3DD0               	addwfc	_br_funkcija+1,f
  2413                           
  2414                           ;CLI.h: 152: return;
  2415  03E2  0008               	return
  2416  03E3                     l1345:	
  2417  03E3  3001               	movlw	1
  2418  03E4  0020               	movlb	0	; select bank0
  2419  03E5  07AB               	addwf	Ticker_attach_ms@i,f
  2420  03E6  3000               	movlw	0
  2421  03E7  3DAC               	addwfc	Ticker_attach_ms@i+1,f
  2422  03E8  2B90               	goto	L3
  2423  03E9                     __end_of_Ticker_attach_ms:	
  2424                           
  2425                           	psect	text15
  2426  02C1                     __ptext15:	
  2427 ;; *************** function _Ticker_attach *****************
  2428 ;; Defined at:
  2429 ;;		line 132 in file "CLI.h"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  f               2    6[BANK0 ] PTR FTN()void 
  2432 ;;		 -> dioda_3(0), dioda_2(0), 
  2433 ;;  vrijeme         2    8[BANK0 ] int 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  i               2   13[BANK0 ] int 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2447 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;Total ram usage:        9 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    3
  2452 ;; This function calls:
  2453 ;;		___bmul
  2454 ;;		___wmul
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _Ticker_attach
  2462  02C1                     _Ticker_attach:	
  2463                           
  2464                           ;CLI.h: 133: int i;
  2465                           ;CLI.h: 134: for(i=0;i<5;i++){
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _Ticker_attach: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2469  02C1  0020               	movlb	0	; select bank0
  2470  02C2  01AD               	clrf	Ticker_attach@i
  2471  02C3  01AE               	clrf	Ticker_attach@i+1
  2472  02C4                     L4:	
  2473  02C4  082E               	movf	Ticker_attach@i+1,w
  2474  02C5  3A80               	xorlw	128
  2475  02C6  00AA               	movwf	??_Ticker_attach
  2476  02C7  3080               	movlw	128
  2477  02C8  022A               	subwf	??_Ticker_attach,w
  2478  02C9  1D03               	skipz
  2479  02CA  2ACD               	goto	u1105
  2480  02CB  3005               	movlw	5
  2481  02CC  022D               	subwf	Ticker_attach@i,w
  2482  02CD                     u1105:	
  2483  02CD  1803               	btfsc	3,0
  2484  02CE  0008               	return
  2485                           
  2486                           ;CLI.h: 135: if(niz[i].zauzeto==0){
  2487  02CF  300A               	movlw	10
  2488  02D0  0020               	movlb	0	; select bank0
  2489  02D1  00AA               	movwf	??_Ticker_attach
  2490  02D2  082A               	movf	??_Ticker_attach,w
  2491  02D3  00A0               	movwf	___bmul@multiplicand
  2492  02D4  082D               	movf	Ticker_attach@i,w
  2493  02D5  3185  2500  3182   	fcall	___bmul
  2494  02D8  3E04               	addlw	4
  2495  02D9  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2496  02DA  0086               	movwf	6
  2497  02DB  0187               	clrf	7
  2498  02DC  0016               	moviw fsr1++
  2499  02DD  0401               	iorwf	1,w
  2500  02DE  1D03               	btfss	3,2
  2501  02DF  2B23               	goto	l1329
  2502                           
  2503                           ;CLI.h: 136: niz[i].f=(*&f);
  2504  02E0  300A               	movlw	10
  2505  02E1  0020               	movlb	0	; select bank0
  2506  02E2  00AA               	movwf	??_Ticker_attach
  2507  02E3  082A               	movf	??_Ticker_attach,w
  2508  02E4  00A0               	movwf	___bmul@multiplicand
  2509  02E5  082D               	movf	Ticker_attach@i,w
  2510  02E6  3185  2500  3182   	fcall	___bmul
  2511  02E9  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2512  02EA  0086               	movwf	6
  2513  02EB  0187               	clrf	7
  2514  02EC  0020               	movlb	0	; select bank0
  2515  02ED  0826               	movf	Ticker_attach@f,w
  2516  02EE  3FC0               	movwi [0]fsr1
  2517  02EF  0827               	movf	Ticker_attach@f+1,w
  2518  02F0  3FC1               	movwi [1]fsr1
  2519                           
  2520                           ;CLI.h: 137: niz[i].vrijeme_ms=vrijeme*1000;
  2521  02F1  300A               	movlw	10
  2522  02F2  00AA               	movwf	??_Ticker_attach
  2523  02F3  082A               	movf	??_Ticker_attach,w
  2524  02F4  00A0               	movwf	___bmul@multiplicand
  2525  02F5  082D               	movf	Ticker_attach@i,w
  2526  02F6  3185  2500  3182   	fcall	___bmul
  2527  02F9  3E02               	addlw	2
  2528  02FA  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2529  02FB  0086               	movwf	6
  2530  02FC  0187               	clrf	7
  2531  02FD  0020               	movlb	0	; select bank0
  2532  02FE  0829               	movf	Ticker_attach@vrijeme+1,w
  2533  02FF  00A1               	movwf	___wmul@multiplier+1
  2534  0300  0828               	movf	Ticker_attach@vrijeme,w
  2535  0301  00A0               	movwf	___wmul@multiplier
  2536  0302  30E8               	movlw	232
  2537  0303  00A2               	movwf	___wmul@multiplicand
  2538  0304  3003               	movlw	3
  2539  0305  00A3               	movwf	___wmul@multiplicand+1
  2540  0306  3184  24D0  3182   	fcall	___wmul
  2541  0309  0020               	movlb	0	; select bank0
  2542  030A  0820               	movf	?___wmul,w
  2543  030B  3FC0               	movwi [0]fsr1
  2544  030C  0821               	movf	?___wmul+1,w
  2545  030D  3FC1               	movwi [1]fsr1
  2546                           
  2547                           ;CLI.h: 138: niz[i].zauzeto=1;
  2548  030E  300A               	movlw	10
  2549  030F  00AA               	movwf	??_Ticker_attach
  2550  0310  082A               	movf	??_Ticker_attach,w
  2551  0311  00A0               	movwf	___bmul@multiplicand
  2552  0312  082D               	movf	Ticker_attach@i,w
  2553  0313  3185  2500         	fcall	___bmul
  2554  0315  3E04               	addlw	4
  2555  0316  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2556  0317  0086               	movwf	6
  2557  0318  0187               	clrf	7
  2558  0319  3001               	movlw	1
  2559  031A  3FC0               	movwi [0]fsr1
  2560  031B  3000               	movlw	0
  2561  031C  3FC1               	movwi [1]fsr1
  2562                           
  2563                           ;CLI.h: 139: br_funkcija++;
  2564  031D  3001               	movlw	1
  2565  031E  0020               	movlb	0	; select bank0
  2566  031F  07CF               	addwf	_br_funkcija,f
  2567  0320  3000               	movlw	0
  2568  0321  3DD0               	addwfc	_br_funkcija+1,f
  2569                           
  2570                           ;CLI.h: 140: return;
  2571  0322  0008               	return
  2572  0323                     l1329:	
  2573  0323  3001               	movlw	1
  2574  0324  0020               	movlb	0	; select bank0
  2575  0325  07AD               	addwf	Ticker_attach@i,f
  2576  0326  3000               	movlw	0
  2577  0327  3DAE               	addwfc	Ticker_attach@i+1,f
  2578  0328  2AC4               	goto	L4
  2579  0329                     __end_of_Ticker_attach:	
  2580                           
  2581                           	psect	text16
  2582  04D0                     __ptext16:	
  2583 ;; *************** function ___wmul *****************
  2584 ;; Defined at:
  2585 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2588 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  product         2    4[BANK0 ] unsigned int 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2    0[BANK0 ] unsigned int 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;Total ram usage:        6 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    2
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_up_date_time
  2611 ;;		_read_number
  2612 ;;		_write_number
  2613 ;;		_Ticker_attach
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function ___wmul
  2619  04D0                     ___wmul:	
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2623  04D0  0020               	movlb	0	; select bank0
  2624  04D1  01A4               	clrf	___wmul@product
  2625  04D2  01A5               	clrf	___wmul@product+1
  2626  04D3                     l1077:	
  2627  04D3  1C20               	btfss	___wmul@multiplier,0
  2628  04D4  2CD9               	goto	l263
  2629  04D5  0822               	movf	___wmul@multiplicand,w
  2630  04D6  07A4               	addwf	___wmul@product,f
  2631  04D7  0823               	movf	___wmul@multiplicand+1,w
  2632  04D8  3DA5               	addwfc	___wmul@product+1,f
  2633  04D9                     l263:	
  2634  04D9  3001               	movlw	1
  2635  04DA                     u795:	
  2636  04DA  35A2               	lslf	___wmul@multiplicand,f
  2637  04DB  0DA3               	rlf	___wmul@multiplicand+1,f
  2638  04DC  0B89               	decfsz	9,f
  2639  04DD  2CDA               	goto	u795
  2640  04DE  3001               	movlw	1
  2641  04DF                     u805:	
  2642  04DF  36A1               	lsrf	___wmul@multiplier+1,f
  2643  04E0  0CA0               	rrf	___wmul@multiplier,f
  2644  04E1  0B89               	decfsz	9,f
  2645  04E2  2CDF               	goto	u805
  2646  04E3  0820               	movf	___wmul@multiplier,w
  2647  04E4  0421               	iorwf	___wmul@multiplier+1,w
  2648  04E5  1D03               	btfss	3,2
  2649  04E6  2CD3               	goto	l1077
  2650  04E7  0825               	movf	___wmul@product+1,w
  2651  04E8  00A1               	movwf	?___wmul+1
  2652  04E9  0824               	movf	___wmul@product,w
  2653  04EA  00A0               	movwf	?___wmul
  2654  04EB  0008               	return
  2655  04EC                     __end_of___wmul:	
  2656                           
  2657                           	psect	text17
  2658  0500                     __ptext17:	
  2659 ;; *************** function ___bmul *****************
  2660 ;; Defined at:
  2661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  multiplier      1    wreg     unsigned char 
  2664 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2667 ;;  product         1    2[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      unsigned char 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:        4 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_aktiviraj
  2688 ;;		_deaktiviraj
  2689 ;;		_command_interface
  2690 ;;		_up_date_time
  2691 ;;		_inicializiraj_tajmer
  2692 ;;		_Ticker_attach
  2693 ;;		_Ticker_attach_ms
  2694 ;;		_tc_int
  2695 ;;		_Ticker_deatach
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function ___bmul
  2701  0500                     ___bmul:	
  2702                           
  2703                           ;incstack = 0
  2704                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2705                           ;___bmul@multiplier stored from wreg
  2706  0500  0020               	movlb	0	; select bank0
  2707  0501  00A3               	movwf	___bmul@multiplier
  2708  0502  01A2               	clrf	___bmul@product
  2709  0503                     l1091:	
  2710  0503  1C23               	btfss	___bmul@multiplier,0
  2711  0504  2D09               	goto	l1095
  2712  0505  0820               	movf	___bmul@multiplicand,w
  2713  0506  00A1               	movwf	??___bmul
  2714  0507  0821               	movf	??___bmul,w
  2715  0508  07A2               	addwf	___bmul@product,f
  2716  0509                     l1095:	
  2717  0509  1003               	clrc
  2718  050A  0DA0               	rlf	___bmul@multiplicand,f
  2719  050B  1003               	clrc
  2720  050C  0CA3               	rrf	___bmul@multiplier,f
  2721  050D  0823               	movf	___bmul@multiplier,w
  2722  050E  1D03               	btfss	3,2
  2723  050F  2D03               	goto	l1091
  2724  0510  0822               	movf	___bmul@product,w
  2725  0511  0008               	return
  2726  0512                     __end_of___bmul:	
  2727                           
  2728                           	psect	intentry
  2729  0004                     __pintentry:	
  2730 ;; *************** function _tc_int *****************
  2731 ;; Defined at:
  2732 ;;		line 164 in file "CLI.h"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  i               2    8[COMMON] int 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;		None               void
  2739 ;; Registers used:
  2740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;Total ram usage:        6 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    1
  2753 ;; This function calls:
  2754 ;;		_dioda_1
  2755 ;;		_dioda_2
  2756 ;;		_dioda_3
  2757 ;;		_dioda_4
  2758 ;;		i1___bmul
  2759 ;; This function is called by:
  2760 ;;		Interrupt level 1
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764  0004                     _tc_int:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _tc_int: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2768  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2769  0005  3180               	pagesel	$
  2770  0006  0020               	movlb	0	; select bank0
  2771  0007  087F               	movf	127,w
  2772  0008  00F7               	movwf	??_tc_int+3
  2773                           
  2774                           ;CLI.h: 165: if(TMR0IE && TMR0IF)
  2775  0009  1A8B               	btfsc	11,5	;volatile
  2776  000A  1D0B               	btfss	11,2	;volatile
  2777  000B  28EB               	goto	i1l155
  2778                           
  2779                           ;CLI.h: 166: {
  2780                           ;CLI.h: 167: TMR0IF=0;
  2781  000C  110B               	bcf	11,2	;volatile
  2782                           
  2783                           ;CLI.h: 168: for(int i=0;i<5;i++){
  2784  000D  01F8               	clrf	tc_int@i
  2785  000E  01F9               	clrf	tc_int@i+1
  2786  000F  0879               	movf	tc_int@i+1,w
  2787  0010  3A80               	xorlw	128
  2788  0011  00F4               	movwf	??_tc_int
  2789  0012  3080               	movlw	128
  2790  0013  0274               	subwf	??_tc_int,w
  2791  0014  1D03               	skipz
  2792  0015  2818               	goto	u130_25
  2793  0016  3005               	movlw	5
  2794  0017  0278               	subwf	tc_int@i,w
  2795  0018                     u130_25:	
  2796  0018  1803               	btfsc	3,0
  2797  0019  2860               	goto	i1l1415
  2798  001A                     i1l1405:	
  2799                           
  2800                           ;CLI.h: 169: if(niz[i].zauzeto==1 && niz[i].start==1) niz[i].brojac++;
  2801  001A  300A               	movlw	10
  2802  001B  00F4               	movwf	??_tc_int
  2803  001C  0874               	movf	??_tc_int,w
  2804  001D  00F0               	movwf	i1___bmul@multiplicand
  2805  001E  0878               	movf	tc_int@i,w
  2806  001F  3185  2523  3180   	fcall	i1___bmul
  2807  0022  3E04               	addlw	4
  2808  0023  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2809  0024  0086               	movwf	6
  2810  0025  0187               	clrf	7
  2811  0026  0016               	moviw fsr1++
  2812  0027  3A01               	xorlw	1
  2813  0028  00F5               	movwf	??_tc_int+1
  2814  0029  0016               	moviw fsr1++
  2815  002A  04F5               	iorwf	??_tc_int+1,f
  2816  002B  1D03               	btfss	3,2
  2817  002C  2851               	goto	i1l1411
  2818  002D  300A               	movlw	10
  2819  002E  00F4               	movwf	??_tc_int
  2820  002F  0874               	movf	??_tc_int,w
  2821  0030  00F0               	movwf	i1___bmul@multiplicand
  2822  0031  0878               	movf	tc_int@i,w
  2823  0032  3185  2523  3180   	fcall	i1___bmul
  2824  0035  3E06               	addlw	6
  2825  0036  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2826  0037  0086               	movwf	6
  2827  0038  0187               	clrf	7
  2828  0039  0016               	moviw fsr1++
  2829  003A  3A01               	xorlw	1
  2830  003B  00F5               	movwf	??_tc_int+1
  2831  003C  0016               	moviw fsr1++
  2832  003D  04F5               	iorwf	??_tc_int+1,f
  2833  003E  1D03               	btfss	3,2
  2834  003F  2851               	goto	i1l1411
  2835  0040  300A               	movlw	10
  2836  0041  00F4               	movwf	??_tc_int
  2837  0042  0874               	movf	??_tc_int,w
  2838  0043  00F0               	movwf	i1___bmul@multiplicand
  2839  0044  0878               	movf	tc_int@i,w
  2840  0045  3185  2523  3180   	fcall	i1___bmul
  2841  0048  3E08               	addlw	8
  2842  0049  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2843  004A  0086               	movwf	6
  2844  004B  0187               	clrf	7
  2845  004C  3001               	movlw	1
  2846  004D  0781               	addwf	1,f
  2847  004E  3141               	addfsr 1,1
  2848  004F  1803               	skipnc
  2849  0050  0A81               	incf	1,f
  2850  0051                     i1l1411:	
  2851  0051  3001               	movlw	1
  2852  0052  07F8               	addwf	tc_int@i,f
  2853  0053  3000               	movlw	0
  2854  0054  3DF9               	addwfc	tc_int@i+1,f
  2855  0055  0879               	movf	tc_int@i+1,w
  2856  0056  3A80               	xorlw	128
  2857  0057  00F4               	movwf	??_tc_int
  2858  0058  3080               	movlw	128
  2859  0059  0274               	subwf	??_tc_int,w
  2860  005A  1D03               	skipz
  2861  005B  285E               	goto	u133_25
  2862  005C  3005               	movlw	5
  2863  005D  0278               	subwf	tc_int@i,w
  2864  005E                     u133_25:	
  2865  005E  1C03               	skipc
  2866  005F  281A               	goto	i1l1405
  2867  0060                     i1l1415:	
  2868                           
  2869                           ;CLI.h: 170: }
  2870                           ;CLI.h: 171: if(niz[0].vrijeme_ms==niz[0].brojac && niz[0].zauzeto==1 && niz[0].start==1
      +                          ) { niz[0].brojac=0; niz[0].f(); }
  2871  0060  0021               	movlb	1	; select bank1
  2872  0061  0829               	movf	((_niz+1)^(0+128)+8),w
  2873  0062  0623               	xorwf	((_niz+1)^(0+128)+2),w
  2874  0063  1D03               	skipz
  2875  0064  2867               	goto	u134_25
  2876  0065  0828               	movf	(_niz^(0+128)+8),w
  2877  0066  0622               	xorwf	(_niz^(0+128)+2),w
  2878  0067                     u134_25:	
  2879  0067  1D03               	skipz
  2880  0068  2878               	goto	i1l1425
  2881  0069  0324               	decf	(_niz^(0+128)+4),w
  2882  006A  0425               	iorwf	((_niz+1)^(0+128)+4),w
  2883  006B  1D03               	btfss	3,2
  2884  006C  2878               	goto	i1l1425
  2885  006D  0326               	decf	(_niz^(0+128)+6),w
  2886  006E  0427               	iorwf	((_niz+1)^(0+128)+6),w
  2887  006F  1D03               	btfss	3,2
  2888  0070  2878               	goto	i1l1425
  2889  0071  01A8               	clrf	(_niz^(0+128)+8)
  2890  0072  01A9               	clrf	((_niz+1)^(0+128)+8)
  2891  0073  0821               	movf	(_niz+1)^(0+128),w
  2892  0074  008A               	movwf	10
  2893  0075  0820               	movf	_niz^(0+128),w
  2894  0076  000A               	callw
  2895  0077  3180               	pagesel	$
  2896  0078                     i1l1425:	
  2897                           
  2898                           ;CLI.h: 172: if(niz[1].vrijeme_ms==niz[1].brojac && niz[1].zauzeto==1 && niz[1].start==1
      +                          ) { niz[1].brojac=0; niz[1].f(); }
  2899  0078  0021               	movlb	1	; select bank1
  2900  0079  0833               	movf	((_niz+1)^(0+128)+18),w
  2901  007A  062D               	xorwf	((_niz+1)^(0+128)+12),w
  2902  007B  1D03               	skipz
  2903  007C  287F               	goto	u137_25
  2904  007D  0832               	movf	(_niz^(0+128)+18),w
  2905  007E  062C               	xorwf	(_niz^(0+128)+12),w
  2906  007F                     u137_25:	
  2907  007F  1D03               	skipz
  2908  0080  2894               	goto	i1l1435
  2909  0081  032E               	decf	(_niz^(0+128)+14),w
  2910  0082  042F               	iorwf	((_niz+1)^(0+128)+14),w
  2911  0083  1D03               	btfss	3,2
  2912  0084  2894               	goto	i1l1435
  2913  0085  0330               	decf	(_niz^(0+128)+16),w
  2914  0086  0431               	iorwf	((_niz+1)^(0+128)+16),w
  2915  0087  1D03               	btfss	3,2
  2916  0088  2894               	goto	i1l1435
  2917  0089  01B2               	clrf	(_niz^(0+128)+18)
  2918  008A  01B3               	clrf	((_niz+1)^(0+128)+18)
  2919  008B  300A               	movlw	10
  2920  008C  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2921  008D  0086               	movwf	6
  2922  008E  0187               	clrf	7
  2923  008F  3F41               	moviw [1]fsr1
  2924  0090  008A               	movwf	10
  2925  0091  3F40               	moviw [0]fsr1
  2926  0092  000A               	callw
  2927  0093  3180               	pagesel	$
  2928  0094                     i1l1435:	
  2929                           
  2930                           ;CLI.h: 173: if(niz[2].vrijeme_ms==niz[2].brojac && niz[2].zauzeto==1 && niz[2].start==1
      +                          ) { niz[2].brojac=0; niz[2].f(); }
  2931  0094  0021               	movlb	1	; select bank1
  2932  0095  083D               	movf	((_niz+1)^(0+128)+28),w
  2933  0096  0637               	xorwf	((_niz+1)^(0+128)+22),w
  2934  0097  1D03               	skipz
  2935  0098  289B               	goto	u140_25
  2936  0099  083C               	movf	(_niz^(0+128)+28),w
  2937  009A  0636               	xorwf	(_niz^(0+128)+22),w
  2938  009B                     u140_25:	
  2939  009B  1D03               	skipz
  2940  009C  28B0               	goto	i1l1445
  2941  009D  0338               	decf	(_niz^(0+128)+24),w
  2942  009E  0439               	iorwf	((_niz+1)^(0+128)+24),w
  2943  009F  1D03               	btfss	3,2
  2944  00A0  28B0               	goto	i1l1445
  2945  00A1  033A               	decf	(_niz^(0+128)+26),w
  2946  00A2  043B               	iorwf	((_niz+1)^(0+128)+26),w
  2947  00A3  1D03               	btfss	3,2
  2948  00A4  28B0               	goto	i1l1445
  2949  00A5  01BC               	clrf	(_niz^(0+128)+28)
  2950  00A6  01BD               	clrf	((_niz+1)^(0+128)+28)
  2951  00A7  3014               	movlw	20
  2952  00A8  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2953  00A9  0086               	movwf	6
  2954  00AA  0187               	clrf	7
  2955  00AB  3F41               	moviw [1]fsr1
  2956  00AC  008A               	movwf	10
  2957  00AD  3F40               	moviw [0]fsr1
  2958  00AE  000A               	callw
  2959  00AF  3180               	pagesel	$
  2960  00B0                     i1l1445:	
  2961                           
  2962                           ;CLI.h: 174: if(niz[3].vrijeme_ms==niz[3].brojac && niz[3].zauzeto==1 && niz[3].start==1
      +                          ) { niz[3].brojac=0; niz[3].f(); }
  2963  00B0  0021               	movlb	1	; select bank1
  2964  00B1  0847               	movf	((_niz+1)^(0+128)+38),w
  2965  00B2  0641               	xorwf	((_niz+1)^(0+128)+32),w
  2966  00B3  1D03               	skipz
  2967  00B4  28B7               	goto	u143_25
  2968  00B5  0846               	movf	(_niz^(0+128)+38),w
  2969  00B6  0640               	xorwf	(_niz^(0+128)+32),w
  2970  00B7                     u143_25:	
  2971  00B7  1D03               	skipz
  2972  00B8  28CC               	goto	i1l1455
  2973  00B9  0342               	decf	(_niz^(0+128)+34),w
  2974  00BA  0443               	iorwf	((_niz+1)^(0+128)+34),w
  2975  00BB  1D03               	btfss	3,2
  2976  00BC  28CC               	goto	i1l1455
  2977  00BD  0344               	decf	(_niz^(0+128)+36),w
  2978  00BE  0445               	iorwf	((_niz+1)^(0+128)+36),w
  2979  00BF  1D03               	btfss	3,2
  2980  00C0  28CC               	goto	i1l1455
  2981  00C1  01C6               	clrf	(_niz^(0+128)+38)
  2982  00C2  01C7               	clrf	((_niz+1)^(0+128)+38)
  2983  00C3  301E               	movlw	30
  2984  00C4  3EA0               	addlw	(low (_niz| 0))& (0+255)
  2985  00C5  0086               	movwf	6
  2986  00C6  0187               	clrf	7
  2987  00C7  3F41               	moviw [1]fsr1
  2988  00C8  008A               	movwf	10
  2989  00C9  3F40               	moviw [0]fsr1
  2990  00CA  000A               	callw
  2991  00CB  3180               	pagesel	$
  2992  00CC                     i1l1455:	
  2993                           
  2994                           ;CLI.h: 175: if(niz[4].vrijeme_ms==niz[4].brojac && niz[4].zauzeto==1 && niz[4].start==1
      +                          ) { niz[4].brojac=0; niz[4].f(); }
  2995  00CC  0021               	movlb	1	; select bank1
  2996  00CD  0851               	movf	((_niz+1)^(0+128)+48),w
  2997  00CE  064B               	xorwf	((_niz+1)^(0+128)+42),w
  2998  00CF  1D03               	skipz
  2999  00D0  28D3               	goto	u146_25
  3000  00D1  0850               	movf	(_niz^(0+128)+48),w
  3001  00D2  064A               	xorwf	(_niz^(0+128)+42),w
  3002  00D3                     u146_25:	
  3003  00D3  1D03               	skipz
  3004  00D4  28E8               	goto	i1l1465
  3005  00D5  034C               	decf	(_niz^(0+128)+44),w
  3006  00D6  044D               	iorwf	((_niz+1)^(0+128)+44),w
  3007  00D7  1D03               	btfss	3,2
  3008  00D8  28E8               	goto	i1l1465
  3009  00D9  034E               	decf	(_niz^(0+128)+46),w
  3010  00DA  044F               	iorwf	((_niz+1)^(0+128)+46),w
  3011  00DB  1D03               	btfss	3,2
  3012  00DC  28E8               	goto	i1l1465
  3013  00DD  01D0               	clrf	(_niz^(0+128)+48)
  3014  00DE  01D1               	clrf	((_niz+1)^(0+128)+48)
  3015  00DF  3028               	movlw	40
  3016  00E0  3EA0               	addlw	(low (_niz| 0))& (0+255)
  3017  00E1  0086               	movwf	6
  3018  00E2  0187               	clrf	7
  3019  00E3  3F41               	moviw [1]fsr1
  3020  00E4  008A               	movwf	10
  3021  00E5  3F40               	moviw [0]fsr1
  3022  00E6  000A               	callw
  3023  00E7  3180               	pagesel	$
  3024  00E8                     i1l1465:	
  3025                           
  3026                           ;CLI.h: 176: TMR0=0x06;
  3027  00E8  3006               	movlw	6
  3028  00E9  0020               	movlb	0	; select bank0
  3029  00EA  0095               	movwf	21	;volatile
  3030  00EB                     i1l155:	
  3031                           ;CLI.h: 177: }
  3032                           ;CLI.h: 178: return;
  3033                           
  3034  00EB  0877               	movf	??_tc_int+3,w
  3035  00EC  00FF               	movwf	127
  3036  00ED  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3037  00EE  0009               	retfie
  3038  00EF                     __end_of_tc_int:	
  3039                           
  3040                           	psect	text19
  3041  0523                     __ptext19:	
  3042 ;; *************** function i1___bmul *****************
  3043 ;; Defined at:
  3044 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  multiplier      1    wreg     unsigned char 
  3047 ;;  multiplicand    1    0[COMMON] unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  multiplier      1    2[COMMON] unsigned char 
  3050 ;;  __bmul          1    3[COMMON] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      unsigned char 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3060 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;Total ram usage:        4 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_tc_int
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           
  3074                           ;psect for function i1___bmul
  3075  0523                     i1___bmul:	
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  3079                           ;i1___bmul@multiplier stored from wreg
  3080  0523  00F2               	movwf	i1___bmul@multiplier
  3081  0524  01F3               	clrf	i1___bmul@product
  3082  0525                     i1l1369:	
  3083  0525  1C72               	btfss	i1___bmul@multiplier,0
  3084  0526  2D2B               	goto	i1l1373
  3085  0527  0870               	movf	i1___bmul@multiplicand,w
  3086  0528  00F1               	movwf	??i1___bmul
  3087  0529  0871               	movf	??i1___bmul,w
  3088  052A  07F3               	addwf	i1___bmul@product,f
  3089  052B                     i1l1373:	
  3090  052B  1003               	clrc
  3091  052C  0DF0               	rlf	i1___bmul@multiplicand,f
  3092  052D  1003               	clrc
  3093  052E  0CF2               	rrf	i1___bmul@multiplier,f
  3094  052F  0872               	movf	i1___bmul@multiplier,w
  3095  0530  1D03               	btfss	3,2
  3096  0531  2D25               	goto	i1l1369
  3097  0532  0873               	movf	i1___bmul@product,w
  3098  0533  0008               	return
  3099  0534                     __end_ofi1___bmul:	
  3100                           
  3101                           	psect	text20
  3102  0550                     __ptext20:	
  3103 ;; *************** function _dioda_3 *****************
  3104 ;; Defined at:
  3105 ;;		line 18 in file "main.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;		None               void
  3112 ;; Registers used:
  3113 ;;		status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;;		_tc_int
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           
  3134                           ;psect for function _dioda_3
  3135  0550                     _dioda_3:	
  3136                           
  3137                           ;main.c: 19: PORTBbits.RB5= !(PORTBbits.RB5);
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _dioda_3: [status,0]
  3141  0550  1003               	clrc
  3142  0551  0020               	movlb	0	; select bank0
  3143  0552  1E8D               	btfss	13,5	;volatile
  3144  0553  1403               	setc
  3145  0554  1C03               	btfss	3,0
  3146  0555  2D59               	goto	u120_20
  3147  0556  0020               	movlb	0	; select bank0
  3148  0557  168D               	bsf	13,5	;volatile
  3149  0558  0008               	return
  3150  0559                     u120_20:	
  3151  0559  0020               	movlb	0	; select bank0
  3152  055A  128D               	bcf	13,5	;volatile
  3153  055B  0008               	return
  3154  055C                     __end_of_dioda_3:	
  3155                           
  3156                           	psect	text21
  3157  055C                     __ptext21:	
  3158 ;; *************** function _dioda_2 *****************
  3159 ;; Defined at:
  3160 ;;		line 15 in file "main.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;		None               void
  3167 ;; Registers used:
  3168 ;;		status,0
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;;		_tc_int
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _dioda_2
  3190  055C                     _dioda_2:	
  3191                           
  3192                           ;main.c: 16: PORTBbits.RB2= !(PORTBbits.RB2);
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _dioda_2: [status,0]
  3196  055C  1003               	clrc
  3197  055D  0020               	movlb	0	; select bank0
  3198  055E  1D0D               	btfss	13,2	;volatile
  3199  055F  1403               	setc
  3200  0560  1C03               	btfss	3,0
  3201  0561  2D65               	goto	u118_20
  3202  0562  0020               	movlb	0	; select bank0
  3203  0563  150D               	bsf	13,2	;volatile
  3204  0564  0008               	return
  3205  0565                     u118_20:	
  3206  0565  0020               	movlb	0	; select bank0
  3207  0566  110D               	bcf	13,2	;volatile
  3208  0567  0008               	return
  3209  0568                     __end_of_dioda_2:	
  3210                           
  3211                           	psect	text22
  3212  0568                     __ptext22:	
  3213 ;; *************** function _dioda_1 *****************
  3214 ;; Defined at:
  3215 ;;		line 12 in file "main.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;		None               void
  3222 ;; Registers used:
  3223 ;;		status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;Total ram usage:        0 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;;		_tc_int
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _dioda_1
  3245  0568                     _dioda_1:	
  3246                           
  3247                           ;main.c: 13: PORTBbits.RB0= !(PORTBbits.RB0);
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _dioda_1: [status,0]
  3251  0568  1003               	clrc
  3252  0569  0020               	movlb	0	; select bank0
  3253  056A  1C0D               	btfss	13,0	;volatile
  3254  056B  1403               	setc
  3255  056C  1C03               	btfss	3,0
  3256  056D  2D71               	goto	u116_20
  3257  056E  0020               	movlb	0	; select bank0
  3258  056F  140D               	bsf	13,0	;volatile
  3259  0570  0008               	return
  3260  0571                     u116_20:	
  3261  0571  0020               	movlb	0	; select bank0
  3262  0572  100D               	bcf	13,0	;volatile
  3263  0573  0008               	return
  3264  0574                     __end_of_dioda_1:	
  3265                           
  3266                           	psect	text23
  3267  0574                     __ptext23:	
  3268 ;; *************** function _dioda_4 *****************
  3269 ;; Defined at:
  3270 ;;		line 21 in file "main.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;		None               void
  3277 ;; Registers used:
  3278 ;;		status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;;		_tc_int
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _dioda_4
  3300  0574                     _dioda_4:	
  3301                           
  3302                           ;main.c: 22: PORTBbits.RB1= !(PORTBbits.RB1);
  3303                           
  3304                           ;incstack = 0
  3305                           ; Regs used in _dioda_4: [status,0]
  3306  0574  1003               	clrc
  3307  0575  0020               	movlb	0	; select bank0
  3308  0576  1C8D               	btfss	13,1	;volatile
  3309  0577  1403               	setc
  3310  0578  1C03               	btfss	3,0
  3311  0579  2D7D               	goto	u122_20
  3312  057A  0020               	movlb	0	; select bank0
  3313  057B  148D               	bsf	13,1	;volatile
  3314  057C  0008               	return
  3315  057D                     u122_20:	
  3316  057D  0020               	movlb	0	; select bank0
  3317  057E  108D               	bcf	13,1	;volatile
  3318  057F  0008               	return
  3319  0580                     __end_of_dioda_4:	
  3320  007E                     btemp	set	126	;btemp
  3321  007E                     int$flags	set	126
  3322  007E                     wtemp	set	126
  3323  007E                     wtemp0	set	126
  3324  0080                     wtemp1	set	128
  3325  0082                     wtemp2	set	130
  3326  0084                     wtemp3	set	132
  3327  0086                     wtemp4	set	134
  3328  0088                     wtemp5	set	136
  3329  007F                     wtemp6	set	127
  3330  007E                     ttemp	set	126
  3331  007E                     ttemp0	set	126
  3332  0081                     ttemp1	set	129
  3333  0084                     ttemp2	set	132
  3334  0087                     ttemp3	set	135
  3335  007F                     ttemp4	set	127
  3336  007E                     ltemp	set	126
  3337  007E                     ltemp0	set	126
  3338  0082                     ltemp1	set	130
  3339  0086                     ltemp2	set	134
  3340  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     37      49
    BANK1            80      0      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Ticker_attach_ms@f	PTR FTN()void  size(2) Largest target is 0
		 -> dioda_4(), dioda_1(), 

    Ticker_attach@f	PTR FTN()void  size(2) Largest target is 0
		 -> dioda_3(), dioda_2(), 

    S20prekid$f	PTR FTN()void  size(2) Largest target is 0
		 -> dioda_4(), dioda_3(), dioda_2(), dioda_1(), 

    niz.f	PTR FTN()void  size(2) Largest target is 0
		 -> dioda_4(), dioda_3(), dioda_2(), dioda_1(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->i1___bmul

Critical Paths under _main in BANK0

    _main->_command_interface
    _konfiguracija->_inicializiraj_tajmer
    _inicializiraj_tajmer->___bmul
    _command_interface->_read_number
    _write_number->___awdiv
    _up_date_time->___wmul
    _read_number->___awdiv
    _deaktiviraj->___bmul
    _aktiviraj->___bmul
    _Ticker_attach_ms->___bmul
    _Ticker_attach->___wmul

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tc_int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tc_int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tc_int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tc_int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tc_int in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18676
                      _Ticker_attach
                   _Ticker_attach_ms
                  _command_interface
              _inicializiraj_portove
                      _konfiguracija
 ---------------------------------------------------------------------------------
 (1) _konfiguracija                                        0     0      0     820
               _inicializiraj_tajmer
                        _init_serial
 ---------------------------------------------------------------------------------
 (2) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inicializiraj_tajmer                                 3     3      0     820
                                              4 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _inicializiraj_portove                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command_interface                                   13    13      0   13113
                                             24 BANK0     13    13      0
                             ___bmul
                          _aktiviraj
                        _deaktiviraj
                          _read_char
                        _read_number
                       _up_date_time
                         _write_char
                       _write_number
 ---------------------------------------------------------------------------------
 (2) _write_number                                        10     8      2    3478
                                              9 BANK0     10     8      2
                            ___awdiv
                             ___bmul (ARG)
                             ___wmul
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _up_date_time                                         7     1      6    3579
                                              6 BANK0      7     1      6
                             ___bmul
                             ___wmul
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _read_number                                         15    13      2    3441
                                              9 BANK0     15    13      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     684
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _read_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _deaktiviraj                                          3     1      2     771
                                              4 BANK0      3     1      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _aktiviraj                                            3     1      2     771
                                              4 BANK0      3     1      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Ticker_attach_ms                                     9     5      4    1120
                                              4 BANK0      9     5      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Ticker_attach                                        9     5      4    3623
                                              6 BANK0      9     5      4
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2504
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     685
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tc_int                                               6     6      0     237
                                              4 COMMON     6     6      0
                            _dioda_1 *
                            _dioda_2 *
                            _dioda_3 *
                            _dioda_4 *
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     125
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _dioda_4                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _dioda_3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _dioda_2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _dioda_1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ticker_attach
     ___bmul
     ___wmul
   _Ticker_attach_ms
     ___bmul
   _command_interface
     ___bmul
     _aktiviraj
       ___bmul
     _deaktiviraj
       ___bmul
     _read_char
     _read_number
       ___awdiv
       ___wmul
     _up_date_time
       ___bmul
       ___wmul
       _write_char
     _write_char
     _write_number
       ___awdiv
       ___bmul (ARG)
       ___wmul (ARG)
       _write_char (ARG)
   _inicializiraj_portove
   _konfiguracija
     _inicializiraj_tajmer
       ___bmul
     _init_serial

 _tc_int (ROOT)
   _dioda_1 *
   _dioda_2 *
   _dioda_3 *
   _dioda_4 *
   i1___bmul *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      31       5       61.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Aug 15 01:06:21 2015

                ___bmul@product 0022                     __CFG_CP$OFF 0000                              l73 058C  
                            l85 01C7                              l79 05A4                    ___awdiv@sign 0026  
           ___wmul@multiplicand 0022           __end_of_konfiguracija 05A4                             l109 01EC  
                           l263 04D9                             _GIE 005F                    __CFG_CPD$OFF 0000  
                           u805 04DF                             u905 0479                             u915 0481  
                           u795 04DA                             u875 0465                             u955 0269  
                           u965 02BB                             u895 046F                             u975 01EA  
                           u995 0206                             _niz 00A0                             wreg 0009  
                  __CFG_FOSC$HS 0000            Ticker_attach@vrijeme 0028                    __CFG_LVP$OFF 0000  
                          l1111 044F                            l1117 045A                            l1301 0194  
                          l1143 0491                            l1135 0480                            l1127 0462  
                          l1207 0253                            l1215 041B                            l1129 046E  
                          l1091 0503                            l1139 0489                            l1219 0440  
                          l1077 04D3                            l1165 026B                            l1095 0509  
                          l1191 0208                            l1263 010B                            l1329 0323  
                          l1345 03E3                            l1177 02BD                            l1283 014A  
                          l1275 0137                            l1269 0121                            l1199 021C  
                          l1289 016B                            _BRGH 0CF2                            _CREN 0CEC  
                          u1005 021A                            u1015 0251                            u1105 02CD  
                          u1045 0343                            u1135 0399                            u1065 0148  
                          u1075 0169                            u1085 0177                            _LATB 010D  
                          _LATD 010F                            _RCIE 048D                            _RCIF 008D  
                          _TMR0 0015                            _SPEN 0CEF                            _TXEN 0CF5  
                          _TXIF 008C                            _SYNC 0CF4                    __CFG_WRT$OFF 0000  
             ?_Ticker_attach_ms 0024                            _main 0496                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf0 0000  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                          ltemp 007E              ??_Ticker_attach_ms 0028                            start 00EF  
                          ttemp 007E                            wtemp 007E                   __CFG_IESO$OFF 0000  
          up_date_time@br_taska 0026               ___bmul@multiplier 0023                   __CFG_MCLRE$ON 0000  
                 write_number@i 002F                   write_number@t 0031                   up_date_time@t 0028  
                         ?_main 0070                 __end_of___awdiv 0496                           _BRG16 0CFB  
                 __CFG_WDTE$OFF 0000          command_interface@i_148 0040                 ___awdiv@divisor 0020  
                         i1l155 00EB                 ___awdiv@counter 0025                           _RCREG 0199  
                         _PORTB 000D                           _PORTD 000F                           _TRISB 008D  
                         _TRISD 008F                           _TXREG 019A                    ?_init_serial 0070  
               __end_of_dioda_1 0574                 __end_of_dioda_2 0568                 __end_of_dioda_3 055C  
               __end_of_dioda_4 0580           __end_of_Ticker_attach 0329                  __CFG_FCMEN$OFF 0000  
                         _cifre 0045                    ?_read_number 0029                __end_ofi1___bmul 0534  
                __CFG_BOREN$OFF 0000                           pclath 000A            __size_of_deaktiviraj 0010  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 00F1  
                  __end_of_main 04D0           __size_of_write_number 0068                          ??_main 0045  
                __CFG_PLLEN$OFF 0000                ___awdiv@dividend 0022           up_date_time@ms_or_sec 002A  
                        _ANSELB 018D                          _ANSELD 018F                          i1l1411 0051  
                        i1l1405 001A                          i1l1415 0060                          u120_20 0559  
                        i1l1425 0078                          i1l1435 0094                          i1l1373 052B  
                        i1l1445 00B0                          i1l1455 00CC                          i1l1369 0525  
                        i1l1465 00E8                          u122_20 057D                          u130_25 0018  
                        u116_20 0571                          u140_25 009B                          u133_25 005E  
                        u118_20 0565                          u134_25 0067                          u143_25 00B7  
                        u137_25 007F                          u146_25 00D3                          _TMR0IE 005D  
                        _TMR0IF 005A                          _SPBRGL 019B                  __CFG_PWRTE$OFF 0000  
             _command_interface 010A                    _write_number 0259                          ___bmul 0500  
                        ___wmul 04D0                       ??___awdiv 0024              ?_command_interface 0070  
                        _tc_int 0004                ___awdiv@quotient 0027                       ??_dioda_1 0070  
                     ??_dioda_2 0070                       ??_dioda_3 0070                       ??_dioda_4 0070  
           ??_command_interface 0038  __size_of_inicializiraj_portove 0014   __end_of_inicializiraj_portove 0500  
       __end_of__initialization 0106       __end_of_command_interface 01DE             ___bmul@multiplicand 0020  
                __pcstackCOMMON 0070                    __pidataBANK0 0580                       ?i1___bmul 0070  
         inicializiraj_tajmer@i 0025                  _OPTION_REGbits 0095              __size_of_aktiviraj 0011  
               write_number@pom 002D                i1___bmul@product 0073            __size_of_init_serial 000C  
                    __pbssBANK0 004F                      __pbssBANK1 00A0            __size_of_read_number 007B  
               __CFG_VCAPEN$OFF 0000   __size_of_inicializiraj_tajmer 0062              __size_of_read_char 0006  
                    __pmaintext 0496                         ?___bmul 0020                         ?___wmul 0020  
    command_interface@ms_or_sec 003B                      __pintentry 0004                         ?_tc_int 0070  
     __size_of_Ticker_attach_ms 005E       command_interface@br_taska 0042                      ??i1___bmul 0071  
      command_interface@naredba 003D      __size_of_command_interface 00D4          __size_of_konfiguracija 0006  
             __end_of_aktiviraj 0523                 __size_of___bmul 0012                         ___awdiv 0444  
               __size_of___wmul 001C                 __CFG_STVREN$OFF 0000                         _dioda_1 0568  
                       _dioda_2 055C                         _dioda_3 0550                         _dioda_4 0574  
               __size_of_tc_int 00EB                         __ptext1 059E                         __ptext2 0544  
                       __ptext3 0329                         __ptext4 04EC                         __ptext5 010A  
                       __ptext6 0259                         __ptext7 03E9                         __ptext8 058A  
                       __ptext9 01DE               __end_of_read_char 05AA             i1___bmul@multiplier 0072  
                 ??_deaktiviraj 0026                         clrloop0 0593              command_interface@i 003E  
            command_interface@t 0039            end_of_initialization 0106                         init_ram 0598  
                       initloop 0599                         tc_int@i 0078          __size_of_Ticker_attach 0068  
                 ?_up_date_time 0026                       _PORTBbits 000D                   _konfiguracija 059E  
                  read_number@i 0034                    read_number@t 0032               Ticker_attach_ms@f 0024  
             Ticker_attach_ms@i 002B             __end_of_deaktiviraj 0544                  __end_of___bmul 0512  
                __end_of___wmul 04EC                  ??_up_date_time 002C                _Ticker_attach_ms 038B  
                    _write_char 058A                  __end_of_tc_int 00EF                  ?_konfiguracija 0070  
             __size_ofi1___bmul 0011             start_initialization 00F1                   _Ticker_attach 02C1  
         _inicializiraj_portove 04EC                        ??___bmul 0021                        ??___wmul 0024  
              write_number@broj 0029                     __pdataBANK0 0045                        ??_tc_int 0074  
  __end_of_inicializiraj_tajmer 038B                   ??_init_serial 0020                       ___latbits 0003  
                ?_Ticker_attach 0026                   __pcstackBANK0 0020                   ??_read_number 002B  
                   _deaktiviraj 0534                        ?___awdiv 0020                       _aktiviraj 0512  
       Ticker_attach_ms@vrijeme 0026                     ?_write_char 0070                 ??_konfiguracija 0027  
                      ?_dioda_1 0070                        ?_dioda_2 0070                        ?_dioda_3 0070  
                      ?_dioda_4 0070                     _br_funkcija 004F                       _read_char 05A4  
        ?_inicializiraj_portove 0070             __end_of_init_serial 0550            __end_of_up_date_time 0444  
                ___wmul@product 0024             __end_of_read_number 0259                       clear_ram0 0592  
         i1___bmul@multiplicand 0070                   ?_write_number 0029                      ?_aktiviraj 0024  
                      i1___bmul 0523               ___wmul@multiplier 0020                 ??_Ticker_attach 002A  
                   write_char@c 0020                      ?_read_char 0070                aktiviraj@br_task 0024  
      __end_of_Ticker_attach_ms 03E9             __size_of_write_char 0008            _inicializiraj_tajmer 0329  
                ??_write_number 002B                __size_of___awdiv 0052                  Ticker_attach@f 0026  
                Ticker_attach@i 002D                __size_of_dioda_1 000C                __size_of_dioda_2 000C  
              __size_of_dioda_3 000C                __size_of_dioda_4 000C                     _init_serial 0544  
                      __ptext10 0444                        __ptext11 05A4                        __ptext20 0550  
                      __ptext12 0534                        __ptext21 055C                        __ptext13 0512  
                      __ptext22 0568                        __ptext14 038B                        __ptext23 0574  
                      __ptext15 02C1                        __ptext16 04D0                        __ptext17 0500  
                      __ptext19 0523                     _read_number 01DE               read_number@buffer 002C  
         ?_inicializiraj_tajmer 0070                   __size_of_main 003A                        int$flags 007E  
                   ??_aktiviraj 0026             command_interface@br 0044           __size_of_up_date_time 005B  
                  ?_deaktiviraj 0024                     ??_read_char 0020                        intlevel1 0000  
              read_number@i_158 0036               __CFG_CLKOUTEN$OFF 0000                    ??_write_char 0020  
                  _up_date_time 03E9                 read_number@broj 0030            __end_of_write_number 02C1  
            deaktiviraj@br_task 0024         ??_inicializiraj_portove 0020          ??_inicializiraj_tajmer 0024  
            __end_of_write_char 0592  
